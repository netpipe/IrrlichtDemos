<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>irrBullet: collisionobject.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.1 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>collisionobject.h</h1>  </div>
</div>
<div class="contents">
<a href="collisionobject_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (C) 2009-2011 Josiah Hartzell (Skyreign Software)</span>
<a name="l00002"></a>00002 <span class="comment">// This file is part of the &quot;irrBullet&quot; Bullet physics extension library and wrapper.</span>
<a name="l00003"></a>00003 <span class="comment">// For conditions of distribution and use, see license in irrbullet.h</span>
<a name="l00004"></a>00004 <span class="comment">// The above copyright notice and its accompanying information must remain here.</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="preprocessor">#ifndef __COLLISION_OBJECT_H_INCLUDED__</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span><span class="preprocessor">#define __COLLISION_OBJECT_H_INCLUDED__</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;<a class="code" href="irrbulletcommon_8h.html">irrbulletcommon.h</a>&quot;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;<a class="code" href="collisionshape_8h.html">collisionshape.h</a>&quot;</span>
<a name="l00011"></a>00011 <span class="preprocessor">#include &quot;BulletCollision/CollisionDispatch/btCollisionObject.h&quot;</span>
<a name="l00012"></a>00012 <span class="preprocessor">#include &quot;<a class="code" href="collisionobjectaffector_8h.html">collisionobjectaffector.h</a>&quot;</span>
<a name="l00013"></a>00013 <span class="preprocessor">#include &lt;IAttributes.h&gt;</span>
<a name="l00014"></a>00014 
<a name="l00015"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">00015</a> <span class="keyword">enum</span> <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a>
<a name="l00016"></a>00016 {
<a name="l00017"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfac7400a66e7a3f4941c14c826387e8068">00017</a>     <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfac7400a66e7a3f4941c14c826387e8068">EAS_ACTIVE</a> = 1,
<a name="l00018"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfab34a93ed559a84bbbfff16b39f70c178">00018</a>     <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfab34a93ed559a84bbbfff16b39f70c178">EAS_SLEEPING</a> = 2,
<a name="l00019"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfad272af82c7279d5fca441337fd18dace">00019</a>     <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfad272af82c7279d5fca441337fd18dace">EAS_WANTS_DEACTIVATION</a> = 3,
<a name="l00020"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfa87b278c4f48d264ca20e5cb4f537ce61">00020</a>     <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfa87b278c4f48d264ca20e5cb4f537ce61">EAS_DISABLE_DEACTIVATION</a> = 4,
<a name="l00021"></a><a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfa6a70f60b18a119c686b84b67fdf7dc8c">00021</a>     <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abfa6a70f60b18a119c686b84b67fdf7dc8c">EAS_DISABLE_SIMULATION</a> = 5
<a name="l00022"></a>00022 };
<a name="l00023"></a>00023 
<a name="l00024"></a>00024 
<a name="l00025"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">00025</a> <span class="keyword">enum</span> <a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a>
<a name="l00026"></a>00026 {
<a name="l00027"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715ae2763d0035f69338cb03efad54da88e8">00027</a>   <a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715ae2763d0035f69338cb03efad54da88e8">ECOT_COLLISION_OBJECT</a> = 1,
<a name="l00028"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715ae424125501cbe239117589198e5f3951">00028</a>   ECOT_RIGID_BODY,
<a name="l00029"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715ad7dfcc230768e52c0a41a6f5a2f0e3eb">00029</a>   ECOT_GHOST_OBJECT,
<a name="l00030"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715a2bb6bd1f930b2f90fdf84abb68ad0de8">00030</a>   ECOT_SOFT_BODY,
<a name="l00031"></a><a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715a3884d03d901b93fcf7d842700c98b7dd">00031</a>   <a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715a3884d03d901b93fcf7d842700c98b7dd">ECOT_HF_FLUID</a>
<a name="l00032"></a>00032 };
<a name="l00033"></a>00033 
<a name="l00034"></a>00034 
<a name="l00035"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">00035</a> <span class="keyword">enum</span> <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a>
<a name="l00036"></a>00036 {
<a name="l00037"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89aab5b6f3a885808b2e09dd8865e78d570">00037</a>     <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89aab5b6f3a885808b2e09dd8865e78d570">ECF_STATIC_OBJECT</a> = 1,
<a name="l00038"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a18da2c72a1e6bb256bdc825d9336c3c2">00038</a>     <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a18da2c72a1e6bb256bdc825d9336c3c2">ECF_KINEMATIC_OBJECT</a> = 2,
<a name="l00039"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a70ac0c0ad0f7e90166eda12c63217cd0">00039</a>     <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a70ac0c0ad0f7e90166eda12c63217cd0">ECF_NO_CONTACT_RESPONSE</a> = 4,
<a name="l00040"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a6516fd2ddd8acf5540712be1f2bb8949">00040</a>     <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a6516fd2ddd8acf5540712be1f2bb8949">ECF_CUSTOM_MATERIAL_CALLBACK</a> = 8,
<a name="l00041"></a><a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a635ba71228dd34afddeb419334642182">00041</a>     <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89a635ba71228dd34afddeb419334642182">ECF_CHARACTER_OBJECT</a> = 16
<a name="l00042"></a>00042 };
<a name="l00043"></a>00043 
<a name="l00044"></a>00044 <span class="keyword">class </span><a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>;
<a name="l00045"></a>00045 
<a name="l00046"></a><a class="code" href="struct_s_collision_object_identification.html">00046</a> <span class="keyword">struct </span><a class="code" href="struct_s_collision_object_identification.html">SCollisionObjectIdentification</a>
<a name="l00047"></a>00047 {
<a name="l00048"></a><a class="code" href="struct_s_collision_object_identification.html#ae2911d072db75e280578c6530070901d">00048</a>     <a class="code" href="struct_s_collision_object_identification.html#ae2911d072db75e280578c6530070901d">SCollisionObjectIdentification</a>()
<a name="l00049"></a>00049     {
<a name="l00050"></a>00050         name = <span class="stringliteral">&quot;IdentificationInvalid&quot;</span>;
<a name="l00051"></a>00051         <span class="keywordtype">object</span> = 0;
<a name="l00052"></a>00052     }
<a name="l00053"></a>00053 
<a name="l00054"></a><a class="code" href="struct_s_collision_object_identification.html#a713007de5f06729b9419dd182bd0998c">00054</a>     <span class="keywordtype">void</span> <a class="code" href="struct_s_collision_object_identification.html#a713007de5f06729b9419dd182bd0998c">setCollisionObject</a>(<a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>* <span class="keyword">const</span> obj) { <span class="keywordtype">object</span> = obj; };
<a name="l00055"></a>00055 
<a name="l00056"></a><a class="code" href="struct_s_collision_object_identification.html#ad9ba92ade2cb12dddb683e1a72a9a85c">00056</a>     <span class="keywordtype">void</span> <a class="code" href="struct_s_collision_object_identification.html#ad9ba92ade2cb12dddb683e1a72a9a85c">setName</a>(<span class="keyword">const</span> irr::core::stringc&amp; newName) { name = newName; };
<a name="l00057"></a>00057 
<a name="l00058"></a><a class="code" href="struct_s_collision_object_identification.html#ab04a507b82aebc0a4e26df65f1886837">00058</a>     <span class="keyword">const</span> irr::core::stringc&amp; <a class="code" href="struct_s_collision_object_identification.html#ab04a507b82aebc0a4e26df65f1886837">getName</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> name; };
<a name="l00059"></a>00059 
<a name="l00060"></a><a class="code" href="struct_s_collision_object_identification.html#afc30e7f1527cd9b77379397e970eab2f">00060</a>     <a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>* <a class="code" href="struct_s_collision_object_identification.html#afc30e7f1527cd9b77379397e970eab2f">getCollisionObject</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> object; };
<a name="l00061"></a>00061 
<a name="l00062"></a>00062 <span class="keyword">private</span>:
<a name="l00063"></a>00063     <a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>* object;
<a name="l00064"></a>00064     irr::core::stringc name;
<a name="l00065"></a>00065 };
<a name="l00066"></a>00066 
<a name="l00067"></a>00067 <span class="keyword">class </span><a class="code" href="classirr_bullet_world.html" title="The interface that drives the physics simulation and debug drawer.">irrBulletWorld</a>;
<a name="l00068"></a>00068 
<a name="l00070"></a><a class="code" href="class_i_collision_object.html">00070</a> <span class="keyword">class </span><a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>
<a name="l00071"></a>00071 {
<a name="l00072"></a>00072     <span class="keyword">public</span>:
<a name="l00073"></a>00073         <a class="code" href="class_i_collision_object.html#a0d9f911cedf9ca021764cb5976f11cf0">ICollisionObject</a>();
<a name="l00074"></a>00074 
<a name="l00075"></a>00075         <span class="keyword">virtual</span> <a class="code" href="class_i_collision_object.html#a86a4da1c6a6300b40ea940120ff45827">~ICollisionObject</a>();
<a name="l00076"></a>00076 
<a name="l00077"></a>00077         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#aa591189d1c2b2ec57ae9eb87195d70f4">updateObject</a>();
<a name="l00078"></a>00078 
<a name="l00088"></a>00088         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a4d72f5e26aaafe85f1b0e48f8c34a51b">setCcdValues</a>(irr::f32 motionThreshold, irr::f32 radius);
<a name="l00089"></a>00089 
<a name="l00091"></a>00091         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a9855e6951d2934dd72c4b8ea6f4b0d27" title="Sets the new world transform of this object. (rotation and position).">setWorldTransform</a>(<span class="keyword">const</span> irr::core::matrix4&amp; irrmat);
<a name="l00092"></a>00092 
<a name="l00093"></a>00093         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a9a33c9047eae4afbd3422839ec368578">setAnisotropicFriction</a>(<span class="keyword">const</span> irr::core::vector3df&amp; friction);
<a name="l00094"></a>00094 
<a name="l00101"></a>00101         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a5923dd3767ee02913335a011610d3244">setContactProcessingThreshold</a>(irr::f32 cpt);
<a name="l00102"></a>00102 
<a name="l00103"></a>00103         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a215f663f5cac44b0c1c35481f641cc68">setActivationState</a>(<a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> newState);
<a name="l00104"></a>00104 
<a name="l00105"></a>00105         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#ae77283e183677a5e6c9581f2f124fe2c">forceActivationState</a>(<a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> newState);
<a name="l00106"></a>00106 
<a name="l00108"></a>00108         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a6c621b4d9e949e8ae9c82dfe9eb8b2aa" title="If sleeping, this will &amp;quot;wake&amp;quot; the object up.">activate</a>(<span class="keywordtype">bool</span> forceActivation=<span class="keyword">false</span>);
<a name="l00109"></a>00109 
<a name="l00111"></a>00111         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a9870214816a83305e7bbc897452000b0" title="Sets how &amp;quot;bouncy&amp;quot; the object is. Higher values will make it more bouncy.">setRestitution</a>(irr::f32 rest);
<a name="l00112"></a>00112 
<a name="l00118"></a>00118         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a4d84a220af79e5fc02b987dd17f073ef">setFriction</a>(irr::f32 friction);
<a name="l00119"></a>00119 
<a name="l00120"></a>00120         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#af32ad82fbe4468ec599b15459c3d8843">setInterpolationLinearVelocity</a>(<span class="keyword">const</span> irr::core::vector3df &amp;linvel);
<a name="l00121"></a>00121 
<a name="l00122"></a>00122         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a935ed870a6e33877a20ce25dee0a7762">setInterpolationAngularVelocity</a>(<span class="keyword">const</span> irr::core::vector3df &amp;angvel);
<a name="l00123"></a>00123 
<a name="l00124"></a>00124         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a4ccc532c2fc4fc572c3e9f6924a130f0">setIslandTag</a>(irr::u32 tag);
<a name="l00125"></a>00125 
<a name="l00126"></a>00126         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#abcb6456d4a4ca07afd5efa5e2372cbf3">setCompanionId</a>(irr::u32 <span class="keywordtype">id</span>);
<a name="l00127"></a>00127 
<a name="l00128"></a>00128         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a43bf02110aef62a2ede50a8b3339a202">setHitFraction</a>(irr::f32 hitFraction);
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a2dc50a7a9c8729a5b7110a6fa8043f77">setCollisionFlags</a>(<a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a> flags);
<a name="l00131"></a>00131 
<a name="l00133"></a>00133         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a548bbcb6fc6a468e21a0e3d8338566bd" title="Adds a new collision object animator to the list of animators to affect this object.">addAffector</a>(<a class="code" href="class_i_collision_object_affector.html">ICollisionObjectAffector</a>* <span class="keyword">const</span> affector);
<a name="l00134"></a>00134 
<a name="l00136"></a>00136         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#abe3306c6b10372edb976d25e9408b77f" title="Removes a collision object animator at the given index.">removeAffector</a>(<a class="code" href="class_i_collision_object_affector.html">ICollisionObjectAffector</a>* <span class="keyword">const</span> affector);
<a name="l00137"></a>00137 
<a name="l00138"></a>00138         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a1e728d75a4fee2efc80572dcb35c1c3a">removeAffectors</a>();
<a name="l00139"></a>00139 
<a name="l00141"></a><a class="code" href="class_i_collision_object.html#a599ed573e26ed839852a774414c39372">00141</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a599ed573e26ed839852a774414c39372">includeNodeOnRemoval</a>(<span class="keywordtype">bool</span> b) { <a class="code" href="class_i_collision_object.html#a0ad4465a8900169925470c244ffc6a63">IncludeNodeOnRemoval</a> = b; };
<a name="l00142"></a>00142 
<a name="l00144"></a><a class="code" href="class_i_collision_object.html#a318ce800ebad9b22377cb8b4e6f63e41">00144</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a318ce800ebad9b22377cb8b4e6f63e41" title="Sets the name of this object to newName.">setName</a>(<span class="keyword">const</span> irr::core::stringc&amp; newName) { <a class="code" href="class_i_collision_object.html#a1aea712509fecf6620a661a4bb335786">collID</a>-&gt;<a class="code" href="struct_s_collision_object_identification.html#ad9ba92ade2cb12dddb683e1a72a9a85c">setName</a>(newName); };
<a name="l00145"></a>00145 
<a name="l00147"></a>00147         <span class="keywordtype">void</span> <span class="keyword">remove</span>();
<a name="l00148"></a>00148 
<a name="l00150"></a><a class="code" href="class_i_collision_object.html#a047eadcc4cdf78d054e4a067613920cf">00150</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_collision_object.html#a047eadcc4cdf78d054e4a067613920cf" title="If enabled, liquid bodies will affect this object.">setLiquidSimulationEnabled</a>(<span class="keywordtype">bool</span> b) { <a class="code" href="class_i_collision_object.html#a422aaafe675cea00e0a77066f076dac8">LiquidSimulationEnabled</a> = b; };
<a name="l00151"></a>00151 
<a name="l00152"></a>00152 
<a name="l00153"></a>00153         <span class="comment">// Operators</span>
<a name="l00154"></a><a class="code" href="class_i_collision_object.html#a2f5eb67d8e3f26df9de754d55e7239ea">00154</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a2f5eb67d8e3f26df9de754d55e7239ea">operator==</a>(<span class="keyword">const</span> <a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>&amp; other)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> (this-&gt;<a class="code" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">uniqueID</a> == other.<a class="code" href="class_i_collision_object.html#ab85f18b67c6fd90bd48ac8d7c1428a32">getUniqueID</a>()); };
<a name="l00155"></a>00155 
<a name="l00156"></a><a class="code" href="class_i_collision_object.html#ae1252e82c9b1093a3b9411d98c1cf63d">00156</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#ae1252e82c9b1093a3b9411d98c1cf63d">operator!=</a>(<span class="keyword">const</span> <a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>&amp; other)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> !(*<span class="keyword">this</span> == other); }
<a name="l00157"></a>00157 
<a name="l00158"></a>00158 
<a name="l00159"></a>00159 
<a name="l00161"></a>00161         btCollisionObject* <a class="code" href="class_i_collision_object.html#a9d0c09d1297e047f3dc48cb7cc89ad82">getPointer</a>() <span class="keyword">const</span>;
<a name="l00162"></a>00162 
<a name="l00164"></a><a class="code" href="class_i_collision_object.html#aab90d958af4082c86a41e047433c0346">00164</a>         <a class="code" href="classirr_bullet_world.html" title="The interface that drives the physics simulation and debug drawer.">irrBulletWorld</a>* <a class="code" href="class_i_collision_object.html#aab90d958af4082c86a41e047433c0346">getDynamicsWorld</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#addacaaf4aea864b76b9e40bdec6936e7">dynamicsWorld</a>; };
<a name="l00165"></a>00165 
<a name="l00171"></a><a class="code" href="class_i_collision_object.html#a602cf37a1a735d94ab0c454c7599dc32">00171</a>         <span class="keyword">const</span> irr::core::matrix4&amp; <a class="code" href="class_i_collision_object.html#a602cf37a1a735d94ab0c454c7599dc32">getWorldTransform</a>()
<a name="l00172"></a>00172         {
<a name="l00173"></a>00173             <a class="code" href="irrbulletcommon_8cpp.html#afefb6828ee1a4305bafed1a535bca1df">btTransformToIrrlichtMatrix</a>(<a class="code" href="class_i_collision_object.html#a9d0c09d1297e047f3dc48cb7cc89ad82">getPointer</a>()-&gt;<a class="code" href="class_i_collision_object.html#a602cf37a1a735d94ab0c454c7599dc32">getWorldTransform</a>(), <a class="code" href="class_i_collision_object.html#aece11c8e5aaef2277c77b22bd72341a1">worldTransform</a>);
<a name="l00174"></a>00174             <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#aece11c8e5aaef2277c77b22bd72341a1">worldTransform</a>;
<a name="l00175"></a>00175         }
<a name="l00176"></a>00176 
<a name="l00177"></a>00177         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#ad7a7b0e2847b4760b1dc5b4471ce54f6">mergesSimulationIslands</a>() <span class="keyword">const</span>;
<a name="l00178"></a>00178 
<a name="l00179"></a>00179         <span class="keyword">const</span> irr::core::vector3df <a class="code" href="class_i_collision_object.html#a5d357935942237dc481ad9fe99a492e1">getAnisotropicFriction</a>() <span class="keyword">const</span>;
<a name="l00180"></a>00180 
<a name="l00181"></a>00181         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a236e76c73a772f73bd83c8671b884678">hasAnisotropicFriction</a>() <span class="keyword">const</span>;
<a name="l00182"></a>00182 
<a name="l00183"></a>00183         irr::f32 <a class="code" href="class_i_collision_object.html#a3f1b8e74ec4dfbe0b7ab5201771788e5">getContactProcessingThreshold</a>() <span class="keyword">const</span>;
<a name="l00184"></a>00184 
<a name="l00185"></a><a class="code" href="class_i_collision_object.html#a733594c8050fe90dfd95870aa05e3a12">00185</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a733594c8050fe90dfd95870aa05e3a12">isStaticObject</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keywordtype">object</span>-&gt;isStaticObject(); };
<a name="l00186"></a><a class="code" href="class_i_collision_object.html#a3c54134928e06972974077306124b199">00186</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a3c54134928e06972974077306124b199">isKinematicObject</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keywordtype">object</span>-&gt;isKinematicObject(); };
<a name="l00187"></a><a class="code" href="class_i_collision_object.html#a8d931f4cb59d728f95e89179f53a7b9b">00187</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a8d931f4cb59d728f95e89179f53a7b9b">isStaticOrKinematicObject</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keywordtype">object</span>-&gt;isStaticOrKinematicObject(); };
<a name="l00188"></a>00188         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a9e0a91ab9d1a193e05e0661dc2940c67">hasContactResponse</a>() <span class="keyword">const</span>;
<a name="l00189"></a>00189 
<a name="l00190"></a>00190         <a class="code" href="collisionobject_8h.html#a99d5f31bca715d4fc51ed043a0e79abf">EActivationState</a> <a class="code" href="class_i_collision_object.html#af7dad55b6edba37ad43ad8d5e626e516">getActivationState</a>() <span class="keyword">const</span>;
<a name="l00191"></a>00191 
<a name="l00192"></a>00192         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a5c158644119a8dbc358ecc6a01a45653">isActive</a>() <span class="keyword">const</span>;
<a name="l00193"></a>00193 
<a name="l00195"></a>00195         irr::f32 <a class="code" href="class_i_collision_object.html#aa8adb77a72e8c94a1f40e907e47c59d4">getRestitution</a>() <span class="keyword">const</span>;
<a name="l00196"></a>00196 
<a name="l00197"></a>00197         irr::f32 <a class="code" href="class_i_collision_object.html#a98052ecc5a1ce1d03cf648872ef338b3">getFriction</a>() <span class="keyword">const</span>;
<a name="l00198"></a>00198 
<a name="l00199"></a>00199         <span class="keyword">const</span> irr::core::vector3df <a class="code" href="class_i_collision_object.html#ab173c0427cbe4fa1b1156031cf877d6e">getInterpolationLinearVelocity</a>() <span class="keyword">const</span>;
<a name="l00200"></a>00200 
<a name="l00201"></a>00201         <span class="keyword">const</span> irr::core::vector3df <a class="code" href="class_i_collision_object.html#af03129c6f5671be997741131de718c9a">getInterpolationAngularVelocity</a>() <span class="keyword">const</span>;
<a name="l00202"></a>00202 
<a name="l00203"></a>00203         irr::u32 <a class="code" href="class_i_collision_object.html#a999814b7b60fa27bcc0d56e282d1bad4">getIslandTag</a>() <span class="keyword">const</span>;
<a name="l00204"></a>00204 
<a name="l00205"></a>00205         irr::u32 <a class="code" href="class_i_collision_object.html#afbd7cbf5b88a8358155cd80df65c487e">getCompanionId</a>() <span class="keyword">const</span>;
<a name="l00206"></a>00206 
<a name="l00207"></a>00207         irr::f32 <a class="code" href="class_i_collision_object.html#aa46ef9d8861fc0f8c2af2d9868e7e63a">getHitFraction</a>() <span class="keyword">const</span>;
<a name="l00208"></a>00208 
<a name="l00209"></a>00209         <a class="code" href="collisionobject_8h.html#a2e29ea5f29dd8b011f98967a3a9a6a89">ECollisionFlag</a> <a class="code" href="class_i_collision_object.html#abbdb1df28e7ece9e433655c4d2acab83">getCollisionFlags</a>() <span class="keyword">const</span>;
<a name="l00210"></a>00210 
<a name="l00211"></a><a class="code" href="class_i_collision_object.html#ab85f18b67c6fd90bd48ac8d7c1428a32">00211</a>         irr::u32 <a class="code" href="class_i_collision_object.html#ab85f18b67c6fd90bd48ac8d7c1428a32">getUniqueID</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">uniqueID</a>; };
<a name="l00212"></a>00212 
<a name="l00213"></a><a class="code" href="class_i_collision_object.html#ac45f369b63799221bfb5a7e824e4410c">00213</a>         <a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a> <a class="code" href="class_i_collision_object.html#ac45f369b63799221bfb5a7e824e4410c">getObjectType</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">objectType</a>; };
<a name="l00214"></a>00214 
<a name="l00215"></a>00215         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#ac2eca8d31e3dfbab14d4866ca64bd020">checkCollideWith</a>(<a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>* <span class="keyword">const</span> collObj) <span class="keyword">const</span>;
<a name="l00216"></a>00216 
<a name="l00217"></a><a class="code" href="class_i_collision_object.html#ada80de2cec00c992f7dcaf679fd8aabf">00217</a>         irr::io::IAttributes* <a class="code" href="class_i_collision_object.html#ada80de2cec00c992f7dcaf679fd8aabf">getAttributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#a7979a9a1bd7173b25232935c2a224f61">attributes</a>; };
<a name="l00218"></a>00218 
<a name="l00219"></a>00219         irr::u32 <a class="code" href="class_i_collision_object.html#aca3041b951c94fffc0c87b6cc674f723">getNumAffectors</a>() <span class="keyword">const</span>;
<a name="l00220"></a>00220 
<a name="l00221"></a>00221         <a class="code" href="class_i_collision_object_affector.html">ICollisionObjectAffector</a>* <a class="code" href="class_i_collision_object.html#afd4cca54ec3d5468565fa392a5159be5">getAffector</a>(irr::u32 index);
<a name="l00222"></a>00222 
<a name="l00223"></a>00223         <span class="comment">//bool hasCollidedWithAttribute(irr::c8 *attributeName) const;</span>
<a name="l00224"></a>00224 
<a name="l00225"></a><a class="code" href="class_i_collision_object.html#ae54b0682974d7a06e4a6a479c79dab16">00225</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#ae54b0682974d7a06e4a6a479c79dab16">isNodeIncludedInRemoval</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#a0ad4465a8900169925470c244ffc6a63">IncludeNodeOnRemoval</a>; };
<a name="l00226"></a>00226 
<a name="l00227"></a>00227         <span class="comment">// @return The name of this collision object</span>
<a name="l00228"></a>00228         <span class="comment">//const irr::core::stringc&amp; getName() const { return collID-&gt;getName(); };</span>
<a name="l00229"></a>00229 
<a name="l00231"></a><a class="code" href="class_i_collision_object.html#ac3a2dcb710c40d92bf606912c2bad098">00231</a>         <a class="code" href="struct_s_collision_object_identification.html">SCollisionObjectIdentification</a>* <a class="code" href="class_i_collision_object.html#ac3a2dcb710c40d92bf606912c2bad098" title="The SCollisionObjectIdentification struct holds the collision object pointer and also the name of the...">getIdentification</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#a1aea712509fecf6620a661a4bb335786">collID</a>; };
<a name="l00232"></a>00232 
<a name="l00233"></a><a class="code" href="class_i_collision_object.html#a0d4b624f0615d1ab74936740d584c17d">00233</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a0d4b624f0615d1ab74936740d584c17d">isLiquidSimulationEnabled</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_collision_object.html#a422aaafe675cea00e0a77066f076dac8">LiquidSimulationEnabled</a>; };
<a name="l00234"></a>00234 
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00237"></a>00237     <span class="keyword">protected</span>:
<a name="l00238"></a>00238         <a class="code" href="classirr_bullet_world.html" title="The interface that drives the physics simulation and debug drawer.">irrBulletWorld</a> *<a class="code" href="class_i_collision_object.html#addacaaf4aea864b76b9e40bdec6936e7">dynamicsWorld</a>;
<a name="l00239"></a><a class="code" href="class_i_collision_object.html#a7e389d5974cb967f3443c29b8d7fa906">00239</a>         btCollisionObject *<a class="code" href="class_i_collision_object.html#a7e389d5974cb967f3443c29b8d7fa906">object</a>;
<a name="l00240"></a><a class="code" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">00240</a>         irr::u32 <a class="code" href="class_i_collision_object.html#a478bc6c2f3e2ed071f573e4caa0cf4da">uniqueID</a>;
<a name="l00241"></a><a class="code" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">00241</a>         <a class="code" href="collisionobject_8h.html#a4a1ba83a534844b4eeb4c7c58bed7715">ECollisionObjectType</a> <a class="code" href="class_i_collision_object.html#ae1c6876bb4d2ae10a3d1263999efc7cf">objectType</a>;
<a name="l00242"></a><a class="code" href="class_i_collision_object.html#a7979a9a1bd7173b25232935c2a224f61">00242</a>         irr::io::IAttributes *<a class="code" href="class_i_collision_object.html#a7979a9a1bd7173b25232935c2a224f61">attributes</a>;
<a name="l00243"></a><a class="code" href="class_i_collision_object.html#a92838619d88e2301d6213999277a9e09">00243</a>         irr::core::list&lt;ICollisionObjectAffector*&gt; <a class="code" href="class_i_collision_object.html#a92838619d88e2301d6213999277a9e09">affectors</a>;
<a name="l00244"></a><a class="code" href="class_i_collision_object.html#a0ad4465a8900169925470c244ffc6a63">00244</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a0ad4465a8900169925470c244ffc6a63">IncludeNodeOnRemoval</a>;
<a name="l00245"></a><a class="code" href="class_i_collision_object.html#a422aaafe675cea00e0a77066f076dac8">00245</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_collision_object.html#a422aaafe675cea00e0a77066f076dac8">LiquidSimulationEnabled</a>;
<a name="l00246"></a><a class="code" href="class_i_collision_object.html#a6db02fb3b400f2ddc3ae4b18e8df253b">00246</a>         btTransform <a class="code" href="class_i_collision_object.html#a6db02fb3b400f2ddc3ae4b18e8df253b">internalTransform</a>;
<a name="l00247"></a><a class="code" href="class_i_collision_object.html#aece11c8e5aaef2277c77b22bd72341a1">00247</a>         irr::core::matrix4 <a class="code" href="class_i_collision_object.html#aece11c8e5aaef2277c77b22bd72341a1">worldTransform</a>;
<a name="l00248"></a>00248 
<a name="l00249"></a><a class="code" href="class_i_collision_object.html#a1aea712509fecf6620a661a4bb335786">00249</a>         <a class="code" href="struct_s_collision_object_identification.html">SCollisionObjectIdentification</a> *<a class="code" href="class_i_collision_object.html#a1aea712509fecf6620a661a4bb335786">collID</a>;
<a name="l00250"></a>00250 };
<a name="l00251"></a>00251 
<a name="l00252"></a>00252 <span class="preprocessor">#endif // __COLLISION_OBJECT_H_INCLUDED__</span>
</pre></div></div>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Thu Feb 10 2011 18:18:15 for irrBullet by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
