<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">
<html xmlns="http://www.w3.org/1999/xhtml">
<head>
<meta http-equiv="Content-Type" content="text/xhtml;charset=UTF-8"/>
<title>irrBullet: raycastvehicle.h Source File</title>
<link href="tabs.css" rel="stylesheet" type="text/css"/>
<link href="search/search.css" rel="stylesheet" type="text/css"/>
<script type="text/javaScript" src="search/search.js"></script>
<link href="doxygen.css" rel="stylesheet" type="text/css"/>
</head>
<body onload='searchBox.OnSelectItem(0);'>
<!-- Generated by Doxygen 1.7.1 -->
<script type="text/javascript"><!--
var searchBox = new SearchBox("searchBox", "search",false,'Search');
--></script>
<div class="navigation" id="top">
  <div class="tabs">
    <ul class="tablist">
      <li><a href="index.html"><span>Main&nbsp;Page</span></a></li>
      <li><a href="namespaces.html"><span>Namespaces</span></a></li>
      <li><a href="annotated.html"><span>Classes</span></a></li>
      <li class="current"><a href="files.html"><span>Files</span></a></li>
      <li id="searchli">
        <div id="MSearchBox" class="MSearchBoxInactive">
        <span class="left">
          <img id="MSearchSelect" src="search/mag_sel.png"
               onmouseover="return searchBox.OnSearchSelectShow()"
               onmouseout="return searchBox.OnSearchSelectHide()"
               alt=""/>
          <input type="text" id="MSearchField" value="Search" accesskey="S"
               onfocus="searchBox.OnSearchFieldFocus(true)" 
               onblur="searchBox.OnSearchFieldFocus(false)" 
               onkeyup="searchBox.OnSearchFieldChange(event)"/>
          </span><span class="right">
            <a id="MSearchClose" href="javascript:searchBox.CloseResultsWindow()"><img id="MSearchCloseImg" border="0" src="search/close.png" alt=""/></a>
          </span>
        </div>
      </li>
    </ul>
  </div>
  <div class="tabs2">
    <ul class="tablist">
      <li><a href="files.html"><span>File&nbsp;List</span></a></li>
      <li><a href="globals.html"><span>File&nbsp;Members</span></a></li>
    </ul>
  </div>
<div class="header">
  <div class="headertitle">
<h1>raycastvehicle.h</h1>  </div>
</div>
<div class="contents">
<a href="raycastvehicle_8h.html">Go to the documentation of this file.</a><div class="fragment"><pre class="fragment"><a name="l00001"></a>00001 <span class="comment">// Copyright (C) 2009-2011 Josiah Hartzell (Skyreign Software)</span>
<a name="l00002"></a>00002 <span class="comment">// This file is part of the &quot;irrBullet&quot; Bullet physics extension library and wrapper.</span>
<a name="l00003"></a>00003 <span class="comment">// For conditions of distribution and use, see license in irrbullet.h</span>
<a name="l00004"></a>00004 <span class="comment">// The above copyright notice and its accompanying information must remain here.</span>
<a name="l00005"></a>00005 
<a name="l00006"></a>00006 <span class="preprocessor">#ifndef __RAYCAST_VEHICLE_H_INCLUDED__</span>
<a name="l00007"></a>00007 <span class="preprocessor"></span><span class="preprocessor">#define __RAYCAST_VEHICLE_H_INCLUDED__</span>
<a name="l00008"></a>00008 <span class="preprocessor"></span>
<a name="l00009"></a>00009 <span class="preprocessor">#include &quot;<a class="code" href="irrbulletcommon_8h.html">irrbulletcommon.h</a>&quot;</span>
<a name="l00010"></a>00010 <span class="preprocessor">#include &quot;BulletDynamics/Vehicle/btRaycastVehicle.h&quot;</span>
<a name="l00011"></a>00011 
<a name="l00012"></a>00012 <span class="keyword">class </span><a class="code" href="classirr_bullet_world.html" title="The interface that drives the physics simulation and debug drawer.">irrBulletWorld</a>;
<a name="l00013"></a>00013 <span class="keyword">class </span><a class="code" href="class_i_rigid_body.html" title="The rigid body is the main type for all &amp;quot;hard&amp;quot; simulation objects (The opposite of a soft b...">IRigidBody</a>;
<a name="l00014"></a>00014 <span class="keyword">class </span><a class="code" href="class_i_collision_object.html" title="The base class of all world objects.">ICollisionObject</a>;
<a name="l00015"></a>00015 <span class="keyword">struct </span>btVehicleRaycaster;
<a name="l00016"></a>00016 
<a name="l00017"></a>00017 
<a name="l00018"></a>00018 <span class="keyword">namespace </span>irr
<a name="l00019"></a>00019 {
<a name="l00020"></a><a class="code" href="namespaceirr_1_1io.html">00020</a>     <span class="keyword">namespace </span>io
<a name="l00021"></a>00021     {
<a name="l00022"></a>00022         <span class="keyword">class </span>IAttributes;
<a name="l00023"></a>00023     }
<a name="l00024"></a>00024 }
<a name="l00025"></a>00025 
<a name="l00026"></a>00026 
<a name="l00027"></a><a class="code" href="struct_s_wheel_info_construction_info.html">00027</a> <span class="keyword">struct </span><a class="code" href="struct_s_wheel_info_construction_info.html">SWheelInfoConstructionInfo</a>
<a name="l00028"></a>00028 {
<a name="l00029"></a><a class="code" href="struct_s_wheel_info_construction_info.html#a422d4a9da7f5644007845b319120c43e">00029</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info_construction_info.html#a422d4a9da7f5644007845b319120c43e">chassisConnectionPointCS</a>;
<a name="l00030"></a><a class="code" href="struct_s_wheel_info_construction_info.html#a40a3cad66f94ccb1f510a9a0680ba8ba">00030</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info_construction_info.html#a40a3cad66f94ccb1f510a9a0680ba8ba">wheelDirectionCS</a>;
<a name="l00031"></a><a class="code" href="struct_s_wheel_info_construction_info.html#a8f952c7f437542d4fca66f7ab8163c29">00031</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info_construction_info.html#a8f952c7f437542d4fca66f7ab8163c29">wheelAxleCS</a>;
<a name="l00032"></a><a class="code" href="struct_s_wheel_info_construction_info.html#a03d03570988dca3d45ccc0179e792553">00032</a>     irr::f32 <a class="code" href="struct_s_wheel_info_construction_info.html#a03d03570988dca3d45ccc0179e792553">suspensionRestLength</a>;
<a name="l00033"></a><a class="code" href="struct_s_wheel_info_construction_info.html#aad8e3f0be7cb246b8c1efb52901d4d5d">00033</a>     irr::f32 <a class="code" href="struct_s_wheel_info_construction_info.html#aad8e3f0be7cb246b8c1efb52901d4d5d">wheelRadius</a>;
<a name="l00034"></a><a class="code" href="struct_s_wheel_info_construction_info.html#ad95fb76c644e8a6393789998571bd590">00034</a>     <span class="keywordtype">bool</span> <a class="code" href="struct_s_wheel_info_construction_info.html#ad95fb76c644e8a6393789998571bd590">isFrontWheel</a>;
<a name="l00035"></a>00035 };
<a name="l00036"></a>00036 
<a name="l00037"></a><a class="code" href="struct_s_raycast_info.html">00037</a> <span class="keyword">struct </span><a class="code" href="struct_s_raycast_info.html">SRaycastInfo</a>
<a name="l00038"></a>00038 {
<a name="l00039"></a><a class="code" href="struct_s_raycast_info.html#a034cb4bf1d48e98124ae229276320a34">00039</a>     irr::core::vector3df <a class="code" href="struct_s_raycast_info.html#a034cb4bf1d48e98124ae229276320a34">contactNormalWS</a>;
<a name="l00040"></a><a class="code" href="struct_s_raycast_info.html#a1103cc599d2b419311113eacb0dffaf0">00040</a>     irr::core::vector3df <a class="code" href="struct_s_raycast_info.html#a1103cc599d2b419311113eacb0dffaf0">contactPointWS</a>;
<a name="l00041"></a><a class="code" href="struct_s_raycast_info.html#ad3d31c7075c8783f354468a42b632f1b">00041</a>     irr::f32 <a class="code" href="struct_s_raycast_info.html#ad3d31c7075c8783f354468a42b632f1b">suspensionLength</a>;
<a name="l00042"></a><a class="code" href="struct_s_raycast_info.html#ab7ba08d0fd046400e8b9e8427891d2e9">00042</a>     irr::core::vector3df <a class="code" href="struct_s_raycast_info.html#ab7ba08d0fd046400e8b9e8427891d2e9">hardPointWS</a>;
<a name="l00043"></a><a class="code" href="struct_s_raycast_info.html#a7b87fe2ec88ee711b2b0c780827af94b">00043</a>     irr::core::vector3df <a class="code" href="struct_s_raycast_info.html#a7b87fe2ec88ee711b2b0c780827af94b">wheelDirectionWS</a>;
<a name="l00044"></a><a class="code" href="struct_s_raycast_info.html#adb6242cb07f215504b787e3b4eb80186">00044</a>     irr::core::vector3df <a class="code" href="struct_s_raycast_info.html#adb6242cb07f215504b787e3b4eb80186">wheelAxleWS</a>;
<a name="l00045"></a><a class="code" href="struct_s_raycast_info.html#ab7689f8f86ae0accc04614af848c477d">00045</a>     <span class="keywordtype">bool</span> <a class="code" href="struct_s_raycast_info.html#ab7689f8f86ae0accc04614af848c477d">isInContact</a>;
<a name="l00046"></a><a class="code" href="struct_s_raycast_info.html#a15b047f783f7303e976241027ca2e00b">00046</a>     <span class="keywordtype">void</span>* <a class="code" href="struct_s_raycast_info.html#a15b047f783f7303e976241027ca2e00b">groundObject</a>;
<a name="l00047"></a>00047 };
<a name="l00048"></a>00048 
<a name="l00050"></a>00050 
<a name="l00054"></a><a class="code" href="struct_s_wheel_info.html">00054</a> <span class="keyword">struct </span><a class="code" href="struct_s_wheel_info.html" title="The SWheelInfo struct contains all of the needed information about each wheel of raycast vehicle...">SWheelInfo</a>
<a name="l00055"></a>00055 {
<a name="l00056"></a><a class="code" href="struct_s_wheel_info.html#a008e1a1bd3fc6bac69fb19f13b5db8cc">00056</a>     irr::core::matrix4 <a class="code" href="struct_s_wheel_info.html#a008e1a1bd3fc6bac69fb19f13b5db8cc">worldTransform</a>;
<a name="l00057"></a><a class="code" href="struct_s_wheel_info.html#a936ef004c1c86a062a10c1b0b443469b">00057</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info.html#a936ef004c1c86a062a10c1b0b443469b">chassisConnectionPointCS</a>;
<a name="l00058"></a><a class="code" href="struct_s_wheel_info.html#af4bdff3fe56aa0282c4c36d81e355fa1">00058</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info.html#af4bdff3fe56aa0282c4c36d81e355fa1">wheelDirectionCS</a>;
<a name="l00059"></a><a class="code" href="struct_s_wheel_info.html#a3474893735a45eb87702e8677586008c">00059</a>     irr::core::vector3df <a class="code" href="struct_s_wheel_info.html#a3474893735a45eb87702e8677586008c">wheelAxleCS</a>;
<a name="l00060"></a><a class="code" href="struct_s_wheel_info.html#af70631abff0277cc51e60f06a5911ac8">00060</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#af70631abff0277cc51e60f06a5911ac8">suspensionRestLength</a>;
<a name="l00061"></a><a class="code" href="struct_s_wheel_info.html#a605223e4da616beed5ee96ea93a00f90">00061</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a605223e4da616beed5ee96ea93a00f90">maxSuspensionTravelCm</a>;
<a name="l00062"></a><a class="code" href="struct_s_wheel_info.html#a49f76c63c68bd0da9e64186044343bd5">00062</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a49f76c63c68bd0da9e64186044343bd5">wheelRadius</a>;
<a name="l00063"></a><a class="code" href="struct_s_wheel_info.html#adb4a3140705a36627c6cf0d827eb37fe">00063</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#adb4a3140705a36627c6cf0d827eb37fe">suspensionStiffness</a>;
<a name="l00064"></a><a class="code" href="struct_s_wheel_info.html#abf303f2868b853175524dbcce2de41b7">00064</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#abf303f2868b853175524dbcce2de41b7">wheelDampingCompression</a>;
<a name="l00065"></a><a class="code" href="struct_s_wheel_info.html#a5678d10add9aef290e7e60e33040b5f4">00065</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a5678d10add9aef290e7e60e33040b5f4">wheelDampingRelaxation</a>;
<a name="l00066"></a><a class="code" href="struct_s_wheel_info.html#a631db5c3afda36c7f68611a563ce0fb7">00066</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a631db5c3afda36c7f68611a563ce0fb7">frictionSlip</a>;
<a name="l00067"></a><a class="code" href="struct_s_wheel_info.html#a138de5cbf23725c1c6f89c3dcb2ea77a">00067</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a138de5cbf23725c1c6f89c3dcb2ea77a">steering</a>;
<a name="l00068"></a><a class="code" href="struct_s_wheel_info.html#a8158f75920a18288889c356bda57862d">00068</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a8158f75920a18288889c356bda57862d">wheelRotation</a>;
<a name="l00069"></a><a class="code" href="struct_s_wheel_info.html#ad74c6b87a736ae4473aa5c24b815c438">00069</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#ad74c6b87a736ae4473aa5c24b815c438">deltaRotation</a>;
<a name="l00070"></a><a class="code" href="struct_s_wheel_info.html#a573be2cb54729684fdda7ce2a6353f1b">00070</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a573be2cb54729684fdda7ce2a6353f1b">rollInfluence</a>;
<a name="l00071"></a><a class="code" href="struct_s_wheel_info.html#a3ff6fba7243d550f601559f7bc5624d8">00071</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a3ff6fba7243d550f601559f7bc5624d8">engineForce</a>;
<a name="l00072"></a><a class="code" href="struct_s_wheel_info.html#ac227cb693cee130d4f92d0f69c115941">00072</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#ac227cb693cee130d4f92d0f69c115941">brake</a>;
<a name="l00073"></a><a class="code" href="struct_s_wheel_info.html#ab899115d2546d01326f5128726e5afaf">00073</a>     <span class="keywordtype">bool</span> <a class="code" href="struct_s_wheel_info.html#ab899115d2546d01326f5128726e5afaf">isFrontWheel</a>;
<a name="l00074"></a><a class="code" href="struct_s_wheel_info.html#a09d98d68726f6ec6e6356b9c031ad26d">00074</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a09d98d68726f6ec6e6356b9c031ad26d">clippedInvContactDotSuspension</a>;
<a name="l00075"></a><a class="code" href="struct_s_wheel_info.html#a9d985b48e82916eb6fbb844e62350c9f">00075</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a9d985b48e82916eb6fbb844e62350c9f">suspensionRelativeVelocity</a>;
<a name="l00076"></a><a class="code" href="struct_s_wheel_info.html#a29fb8cb3b5fe3c0e63d2753434977b22">00076</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a29fb8cb3b5fe3c0e63d2753434977b22">wheelSuspensionForce</a>;
<a name="l00077"></a><a class="code" href="struct_s_wheel_info.html#a0d6852dc6006721332c7437b06c70279">00077</a>     irr::f32 <a class="code" href="struct_s_wheel_info.html#a0d6852dc6006721332c7437b06c70279">skidInfo</a>;
<a name="l00078"></a><a class="code" href="struct_s_wheel_info.html#afb451ab98a5503b0738b77215c6d7752">00078</a>     <a class="code" href="struct_s_raycast_info.html">SRaycastInfo</a> <a class="code" href="struct_s_wheel_info.html#afb451ab98a5503b0738b77215c6d7752">raycastInfo</a>;
<a name="l00079"></a>00079 };
<a name="l00080"></a>00080 
<a name="l00082"></a><a class="code" href="class_i_vehicle_raycaster.html">00082</a> <span class="keyword">class </span><a class="code" href="class_i_vehicle_raycaster.html" title="This vehicle raycaster allows for collision masks and groups. The original Bullet raycaster does not...">IVehicleRaycaster</a> : <span class="keyword">public</span> btVehicleRaycaster
<a name="l00083"></a>00083 {
<a name="l00084"></a>00084     <span class="keyword">public</span>:
<a name="l00085"></a><a class="code" href="class_i_vehicle_raycaster.html#a9b8f5b109e77d95f74af2779026123cb">00085</a>         <a class="code" href="class_i_vehicle_raycaster.html#a9b8f5b109e77d95f74af2779026123cb">IVehicleRaycaster</a>(btDynamicsWorld* world) : m_dynamicsWorld(world)
<a name="l00086"></a>00086         {
<a name="l00087"></a>00087             useFilter = <span class="keyword">false</span>;
<a name="l00088"></a>00088             collisionFilterMask = 0;
<a name="l00089"></a>00089             collisionFilterGroup = 0;
<a name="l00090"></a>00090         }
<a name="l00091"></a>00091 
<a name="l00092"></a>00092         <span class="keyword">virtual</span> <span class="keywordtype">void</span>* <a class="code" href="class_i_vehicle_raycaster.html#abb3462d53de232b4e2e65467b7b5dbe6">castRay</a>(<span class="keyword">const</span> btVector3&amp; from,<span class="keyword">const</span> btVector3&amp; to, btVehicleRaycasterResult&amp; result);
<a name="l00093"></a>00093 
<a name="l00095"></a><a class="code" href="class_i_vehicle_raycaster.html#ad375b0880dac74b111d2ddda639d80d4">00095</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_vehicle_raycaster.html#ad375b0880dac74b111d2ddda639d80d4" title="This has to be set to true before collision filtering will work.">setUseFilter</a>(<span class="keywordtype">bool</span> b) { useFilter = b; };
<a name="l00096"></a>00096 
<a name="l00098"></a><a class="code" href="class_i_vehicle_raycaster.html#ab711ed6e647888acdac1e3b5a821d101">00098</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_vehicle_raycaster.html#ab711ed6e647888acdac1e3b5a821d101" title="Sets the collision filter mask. This can use the same filter mask as the chassis (IRigidBody) or anot...">setCollisionFilterMask</a>(<span class="keywordtype">int</span> newMask) { collisionFilterMask = newMask; };
<a name="l00099"></a>00099 
<a name="l00101"></a><a class="code" href="class_i_vehicle_raycaster.html#ae075b3716bb0cce51e6139dae5370c76">00101</a>         <span class="keywordtype">void</span> <a class="code" href="class_i_vehicle_raycaster.html#ae075b3716bb0cce51e6139dae5370c76" title="Sets the collision filter group. This can use the same filter group as the chassis (IRigidBody) or an...">setCollisionFilterGroup</a>(<span class="keywordtype">int</span> newGroup) { collisionFilterGroup = newGroup; };
<a name="l00102"></a>00102 
<a name="l00103"></a>00103 
<a name="l00104"></a><a class="code" href="class_i_vehicle_raycaster.html#ad95d4be27d84a21ebaa981224c755ef5">00104</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_vehicle_raycaster.html#ad95d4be27d84a21ebaa981224c755ef5">getUseFilter</a>() { <span class="keywordflow">return</span> useFilter; };
<a name="l00105"></a><a class="code" href="class_i_vehicle_raycaster.html#a6af1ae2b251004db633415b652567e0a">00105</a>         <span class="keywordtype">int</span> <a class="code" href="class_i_vehicle_raycaster.html#a6af1ae2b251004db633415b652567e0a">getCollisionFilterMask</a>() { <span class="keywordflow">return</span> collisionFilterMask; };
<a name="l00106"></a><a class="code" href="class_i_vehicle_raycaster.html#aae3c0dd62361325c2e61124839f6f35d">00106</a>         <span class="keywordtype">int</span> <a class="code" href="class_i_vehicle_raycaster.html#aae3c0dd62361325c2e61124839f6f35d">getCollisionFilterGroup</a>() { <span class="keywordflow">return</span> collisionFilterGroup; };
<a name="l00107"></a>00107 
<a name="l00108"></a>00108 
<a name="l00109"></a>00109     <span class="keyword">private</span>:
<a name="l00110"></a>00110         btDynamicsWorld* m_dynamicsWorld;
<a name="l00111"></a>00111         <span class="keywordtype">bool</span> useFilter;
<a name="l00112"></a>00112         <span class="keywordtype">int</span> collisionFilterMask;
<a name="l00113"></a>00113         <span class="keywordtype">int</span> collisionFilterGroup;
<a name="l00114"></a>00114 };
<a name="l00115"></a>00115 
<a name="l00117"></a>00117 
<a name="l00123"></a><a class="code" href="class_i_raycast_vehicle.html">00123</a> <span class="keyword">class </span><a class="code" href="class_i_raycast_vehicle.html" title="The raycast vehicle is a special constraint for vehicle simulation using raycasting.">IRaycastVehicle</a>
<a name="l00124"></a>00124 {
<a name="l00125"></a>00125     <span class="keyword">public</span>:
<a name="l00126"></a>00126         <a class="code" href="class_i_raycast_vehicle.html#afdb7802f19d3145eb95d6745d9538d83">IRaycastVehicle</a>(<a class="code" href="class_i_rigid_body.html" title="The rigid body is the main type for all &amp;quot;hard&amp;quot; simulation objects (The opposite of a soft b...">IRigidBody</a>* <span class="keyword">const</span> body, <span class="keyword">const</span> irr::core::vector3d&lt;irr::s32&gt;&amp; coordSys=irr::core::vector3d&lt;irr::s32&gt;(0,1,2));
<a name="l00127"></a>00127         <a class="code" href="class_i_raycast_vehicle.html#afdb7802f19d3145eb95d6745d9538d83">IRaycastVehicle</a>(<a class="code" href="class_i_rigid_body.html" title="The rigid body is the main type for all &amp;quot;hard&amp;quot; simulation objects (The opposite of a soft b...">IRigidBody</a>* <span class="keyword">const</span> body, btVehicleRaycaster* <span class="keyword">const</span> raycaster,
<a name="l00128"></a>00128             <span class="keyword">const</span> irr::core::vector3d&lt;irr::s32&gt;&amp; coordSys=irr::core::vector3d&lt;irr::s32&gt;(0,1,2));
<a name="l00129"></a>00129 
<a name="l00130"></a>00130         <a class="code" href="class_i_raycast_vehicle.html#ac0f01311d95a3535fe4741312199b9f8">~IRaycastVehicle</a>();
<a name="l00131"></a>00131 
<a name="l00132"></a>00132 
<a name="l00134"></a>00134         <a class="code" href="struct_s_wheel_info.html" title="The SWheelInfo struct contains all of the needed information about each wheel of raycast vehicle...">SWheelInfo</a>&amp; <a class="code" href="class_i_raycast_vehicle.html#ad9e2795fa1385d2f31ebcda92fd6329d" title="Adds a new wheel to the vehicle using the construction info given.">addWheel</a>(<span class="keyword">const</span> <a class="code" href="struct_s_wheel_info_construction_info.html">SWheelInfoConstructionInfo</a>&amp; info);
<a name="l00135"></a>00135 
<a name="l00151"></a>00151         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#aaf18eaa263c61ad3bfea8a949b971d58">updateWheelInfo</a>(irr::u32 wheelID);
<a name="l00152"></a>00152 
<a name="l00153"></a>00153         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#aa9b85f3b459089edd20895cca3d2e21b">resetSuspension</a>();
<a name="l00154"></a>00154 
<a name="l00156"></a>00156         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#a8e84dfe28eee4c085ec1f0814494b950" title="Sets the rotation of the wheel at index wheelID along the local Y axis.">setSteeringValue</a>(irr::f32 steering, irr::u32 wheelID);
<a name="l00157"></a>00157 
<a name="l00159"></a>00159         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#abfa804a8639c77200edaa946f7c62c5c" title="Applies a torque to the wheel on its local X axis.">applyEngineForce</a>(irr::f32 force, irr::u32 wheelID);
<a name="l00160"></a>00160 
<a name="l00165"></a>00165         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#a052d9a12feefe46b4b3d33e50e5aa5fd">updateWheelTransform</a>(irr::u32 wheelID, <span class="keywordtype">bool</span> interpolatedTransform=<span class="keyword">true</span>);
<a name="l00166"></a>00166 
<a name="l00167"></a>00167         <span class="comment">// Undefined reference with this one. Disabled for now.</span>
<a name="l00168"></a>00168         <span class="comment">/*void setRaycastWheelInfo(irr::u32 wheelID, bool isInContact,</span>
<a name="l00169"></a>00169 <span class="comment">            const irr::core::vector3df &amp;hitPoint, const irr::core::vector3df &amp;hitNormal, irr::f64 depth);*/</span>
<a name="l00170"></a>00170 
<a name="l00171"></a>00171         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#a80a6d901b819f0d0e1245db04ad33771">setBrake</a>(irr::f32 brake, irr::u32 wheelID);
<a name="l00172"></a>00172 
<a name="l00173"></a>00173         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#a134b181048b5ad91563e392e7aeb1094">setPitchControl</a>(irr::f32 pitch);
<a name="l00174"></a>00174 
<a name="l00175"></a>00175         <span class="keywordtype">void</span> <a class="code" href="class_i_raycast_vehicle.html#adc43e56c842d806a2b90bfb091aa6a1b">setCoordinateSystem</a>(<span class="keyword">const</span> irr::core::vector3d&lt;irr::s32&gt;&amp; coordSys);
<a name="l00176"></a>00176 
<a name="l00177"></a>00177 
<a name="l00179"></a><a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1">00179</a>         btRaycastVehicle* <a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#aa2f32195a512b3fadae0458d8108abca">raycastVehicle</a>; };
<a name="l00180"></a>00180 
<a name="l00182"></a><a class="code" href="class_i_raycast_vehicle.html#abcb1334adbce04d69d9e9358e2dd7130">00182</a>         <a class="code" href="class_i_rigid_body.html" title="The rigid body is the main type for all &amp;quot;hard&amp;quot; simulation objects (The opposite of a soft b...">IRigidBody</a>* <a class="code" href="class_i_raycast_vehicle.html#abcb1334adbce04d69d9e9358e2dd7130" title="Gets the rigid body that this vehicle is applied to.">getRigidBody</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#adc1ce106168f2da41e427a2c5b608a62">rigidBody</a>; };
<a name="l00183"></a>00183 
<a name="l00184"></a><a class="code" href="class_i_raycast_vehicle.html#a9e7b820b6dfca94f65c68ce2e4e9655d">00184</a>         irr::s32 <a class="code" href="class_i_raycast_vehicle.html#a9e7b820b6dfca94f65c68ce2e4e9655d">getRightAxis</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#ac3258c784137f7e913891589839e4953">axes</a>.X; };
<a name="l00185"></a>00185 
<a name="l00186"></a><a class="code" href="class_i_raycast_vehicle.html#a8794915bab5f75afc32cc0d04e2effb5">00186</a>         irr::s32 <a class="code" href="class_i_raycast_vehicle.html#a8794915bab5f75afc32cc0d04e2effb5">getUpAxis</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#ac3258c784137f7e913891589839e4953">axes</a>.Y; };
<a name="l00187"></a>00187 
<a name="l00188"></a><a class="code" href="class_i_raycast_vehicle.html#aeb65ecba26d15204096330d8c7adf541">00188</a>         irr::s32 <a class="code" href="class_i_raycast_vehicle.html#aeb65ecba26d15204096330d8c7adf541">getForwardAxis</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#ac3258c784137f7e913891589839e4953">axes</a>.Z; };
<a name="l00189"></a>00189 
<a name="l00190"></a><a class="code" href="class_i_raycast_vehicle.html#a29c00bbe2a296c486e9441896187df2f">00190</a>         <span class="keyword">const</span> irr::core::vector3df <a class="code" href="class_i_raycast_vehicle.html#a29c00bbe2a296c486e9441896187df2f">getForwardVector</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="irrbulletcommon_8cpp.html#a3831c7a908205489165604e02451fb8d">bulletToIrrlichtVector</a>(<a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()-&gt;<a class="code" href="class_i_raycast_vehicle.html#a29c00bbe2a296c486e9441896187df2f">getForwardVector</a>()); };
<a name="l00191"></a>00191 
<a name="l00192"></a><a class="code" href="class_i_raycast_vehicle.html#a4d533064fa0a09ccb92952c9a558b015">00192</a>         irr::f32 <a class="code" href="class_i_raycast_vehicle.html#a4d533064fa0a09ccb92952c9a558b015">getCurrentSpeedKmHour</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> irr::f32(<a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()-&gt;<a class="code" href="class_i_raycast_vehicle.html#a4d533064fa0a09ccb92952c9a558b015">getCurrentSpeedKmHour</a>()); };
<a name="l00193"></a>00193 
<a name="l00194"></a><a class="code" href="class_i_raycast_vehicle.html#a967fa457eb1a52ce20a758a196e19140">00194</a>         irr::u32 <a class="code" href="class_i_raycast_vehicle.html#a967fa457eb1a52ce20a758a196e19140">getNumWheels</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> irr::u32(<a class="code" href="class_i_raycast_vehicle.html#aa2f32195a512b3fadae0458d8108abca">raycastVehicle</a>-&gt;getNumWheels()); };
<a name="l00195"></a>00195 
<a name="l00196"></a>00196         <a class="code" href="struct_s_wheel_info.html" title="The SWheelInfo struct contains all of the needed information about each wheel of raycast vehicle...">SWheelInfo</a>&amp; <a class="code" href="class_i_raycast_vehicle.html#a8b0208092aec41c9eebd6f04adaf9177">getWheelInfo</a>(irr::u32 wheelID);
<a name="l00197"></a>00197 
<a name="l00198"></a><a class="code" href="class_i_raycast_vehicle.html#aa057a25a72b958679db9e847e0190922">00198</a>         irr::core::matrix4&amp; <a class="code" href="class_i_raycast_vehicle.html#aa057a25a72b958679db9e847e0190922">getChassisWorldTransform</a>()
<a name="l00199"></a>00199         {
<a name="l00200"></a>00200             <a class="code" href="irrbulletcommon_8cpp.html#afefb6828ee1a4305bafed1a535bca1df">btTransformToIrrlichtMatrix</a>(<a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()-&gt;<a class="code" href="class_i_raycast_vehicle.html#aa057a25a72b958679db9e847e0190922">getChassisWorldTransform</a>(), <a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">InternalTransform</a>);
<a name="l00201"></a>00201             <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">InternalTransform</a>;
<a name="l00202"></a>00202         };
<a name="l00203"></a>00203 
<a name="l00204"></a><a class="code" href="class_i_raycast_vehicle.html#a61cbb0a1e7604dbf21d3ced22df1dc73">00204</a>         irr::f32 <a class="code" href="class_i_raycast_vehicle.html#a61cbb0a1e7604dbf21d3ced22df1dc73">getSteeringValue</a>(irr::u32 wheelID)<span class="keyword"> const </span>{ <span class="keywordflow">return</span> irr::f32(<a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()-&gt;<a class="code" href="class_i_raycast_vehicle.html#a61cbb0a1e7604dbf21d3ced22df1dc73">getSteeringValue</a>(wheelID)); };
<a name="l00205"></a>00205 
<a name="l00206"></a><a class="code" href="class_i_raycast_vehicle.html#af774f0f1dc3cc7920be9c1724974d44d">00206</a>         irr::core::matrix4&amp; <a class="code" href="class_i_raycast_vehicle.html#af774f0f1dc3cc7920be9c1724974d44d">getWheelTransformWS</a>(irr::u32 wheelID)
<a name="l00207"></a>00207         {
<a name="l00208"></a>00208             <a class="code" href="irrbulletcommon_8cpp.html#afefb6828ee1a4305bafed1a535bca1df">btTransformToIrrlichtMatrix</a>(<a class="code" href="class_i_raycast_vehicle.html#a20cafb1699dc358adac04d2898bb1bb1" title="Gets a pointer to the underlying btRaycastVehicle.">getPointer</a>()-&gt;<a class="code" href="class_i_raycast_vehicle.html#af774f0f1dc3cc7920be9c1724974d44d">getWheelTransformWS</a>(wheelID), <a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">InternalTransform</a>);
<a name="l00209"></a>00209             <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">InternalTransform</a>;
<a name="l00210"></a>00210         };
<a name="l00211"></a>00211 
<a name="l00212"></a><a class="code" href="class_i_raycast_vehicle.html#ac0fad391da3e00271648626652221af3">00212</a>         irr::io::IAttributes* <a class="code" href="class_i_raycast_vehicle.html#ac0fad391da3e00271648626652221af3">getAttributes</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#a841aec094bc76e25cc9e612e8cf88a7d">attributes</a>; };
<a name="l00213"></a>00213 
<a name="l00215"></a><a class="code" href="class_i_raycast_vehicle.html#a4a0d040aecdfb796474ad35b14048bd2">00215</a>         <a class="code" href="class_i_vehicle_raycaster.html" title="This vehicle raycaster allows for collision masks and groups. The original Bullet raycaster does not...">IVehicleRaycaster</a>* <a class="code" href="class_i_raycast_vehicle.html#a4a0d040aecdfb796474ad35b14048bd2" title="Only use this if you don&amp;#39;t use a custom vehicle raycaster. If you do, use getVehicleRaycasterCust...">getVehicleRaycaster</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <span class="keyword">static_cast&lt;</span><a class="code" href="class_i_vehicle_raycaster.html" title="This vehicle raycaster allows for collision masks and groups. The original Bullet raycaster does not...">IVehicleRaycaster</a>*<span class="keyword">&gt;</span>(<a class="code" href="class_i_raycast_vehicle.html#acc9653803b37093a4ccde121b25ff6b9">vehicleRaycaster</a>); };
<a name="l00216"></a>00216 
<a name="l00218"></a><a class="code" href="class_i_raycast_vehicle.html#a8e9412a05a9cf5bda805d3eec9d5dcbf">00218</a>         btVehicleRaycaster* <a class="code" href="class_i_raycast_vehicle.html#ad27c517ea90c53d3b52fecfdb26a3714" title="Use this if you use your own custom vehicle raycaster.">getVehicleRaycasterCustom</a>()<span class="keyword"> const </span>{ <span class="keywordflow">return</span> <a class="code" href="class_i_raycast_vehicle.html#acc9653803b37093a4ccde121b25ff6b9">vehicleRaycaster</a>; };
<a name="l00219"></a>00219 
<a name="l00220"></a>00220 
<a name="l00221"></a>00221 
<a name="l00222"></a>00222     <span class="keyword">protected</span>:
<a name="l00223"></a>00223         btRaycastVehicle::btVehicleTuning <a class="code" href="class_i_raycast_vehicle.html#a8e9412a05a9cf5bda805d3eec9d5dcbf">vehicleTuning</a>;
<a name="l00224"></a><a class="code" href="class_i_raycast_vehicle.html#acc9653803b37093a4ccde121b25ff6b9">00224</a>         btVehicleRaycaster* <a class="code" href="class_i_raycast_vehicle.html#acc9653803b37093a4ccde121b25ff6b9">vehicleRaycaster</a>;
<a name="l00225"></a><a class="code" href="class_i_raycast_vehicle.html#aa2f32195a512b3fadae0458d8108abca">00225</a>         btRaycastVehicle* <a class="code" href="class_i_raycast_vehicle.html#aa2f32195a512b3fadae0458d8108abca">raycastVehicle</a>;
<a name="l00226"></a><a class="code" href="class_i_raycast_vehicle.html#adc1ce106168f2da41e427a2c5b608a62">00226</a>         <a class="code" href="class_i_rigid_body.html" title="The rigid body is the main type for all &amp;quot;hard&amp;quot; simulation objects (The opposite of a soft b...">IRigidBody</a> *<a class="code" href="class_i_raycast_vehicle.html#adc1ce106168f2da41e427a2c5b608a62">rigidBody</a>;
<a name="l00227"></a><a class="code" href="class_i_raycast_vehicle.html#ac3258c784137f7e913891589839e4953">00227</a>         irr::core::vector3d&lt;irr::s32&gt; <a class="code" href="class_i_raycast_vehicle.html#ac3258c784137f7e913891589839e4953">axes</a>;
<a name="l00228"></a><a class="code" href="class_i_raycast_vehicle.html#a841aec094bc76e25cc9e612e8cf88a7d">00228</a>         irr::io::IAttributes *<a class="code" href="class_i_raycast_vehicle.html#a841aec094bc76e25cc9e612e8cf88a7d">attributes</a>;
<a name="l00229"></a><a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">00229</a>         irr::core::matrix4 <a class="code" href="class_i_raycast_vehicle.html#a00a5aa1c421e5b9eec09d498ed4b25a9">InternalTransform</a>;
<a name="l00230"></a>00230 
<a name="l00231"></a><a class="code" href="class_i_raycast_vehicle.html#a9a62a86e333511b44c4d063cfe43244c">00231</a>         <span class="keywordtype">bool</span> <a class="code" href="class_i_raycast_vehicle.html#a9a62a86e333511b44c4d063cfe43244c">usesOriginalRaycaster</a>;
<a name="l00232"></a>00232 
<a name="l00233"></a><a class="code" href="class_i_raycast_vehicle.html#afc5ac6835d3d1299f46408d49277282b">00233</a>         <a class="code" href="struct_s_wheel_info.html" title="The SWheelInfo struct contains all of the needed information about each wheel of raycast vehicle...">SWheelInfo</a> <a class="code" href="class_i_raycast_vehicle.html#afc5ac6835d3d1299f46408d49277282b">wheelInfo</a>;
<a name="l00234"></a>00234 };
<a name="l00235"></a>00235 
<a name="l00236"></a>00236 
<a name="l00237"></a>00237 <span class="preprocessor">#endif // __RAYCAST_VEHICLE_H_INCLUDED__</span>
</pre></div></div>
</div>
<!--- window showing the filter options -->
<div id="MSearchSelectWindow"
     onmouseover="return searchBox.OnSearchSelectShow()"
     onmouseout="return searchBox.OnSearchSelectHide()"
     onkeydown="return searchBox.OnSearchSelectKey(event)">
<a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(0)"><span class="SelectionMark">&nbsp;</span>All</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(1)"><span class="SelectionMark">&nbsp;</span>Classes</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(2)"><span class="SelectionMark">&nbsp;</span>Namespaces</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(3)"><span class="SelectionMark">&nbsp;</span>Files</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(4)"><span class="SelectionMark">&nbsp;</span>Functions</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(5)"><span class="SelectionMark">&nbsp;</span>Variables</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(6)"><span class="SelectionMark">&nbsp;</span>Enumerations</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(7)"><span class="SelectionMark">&nbsp;</span>Enumerator</a><a class="SelectItem" href="javascript:void(0)" onclick="searchBox.OnSelectItem(8)"><span class="SelectionMark">&nbsp;</span>Defines</a></div>

<!-- iframe showing the search results (closed by default) -->
<div id="MSearchResultsWindow">
<iframe src="" frameborder="0" 
        name="MSearchResults" id="MSearchResults">
</iframe>
</div>

<hr class="footer"/><address class="footer"><small>Generated on Thu Feb 10 2011 18:18:15 for irrBullet by&nbsp;
<a href="http://www.doxygen.org/index.html">
<img class="footer" src="doxygen.png" alt="doxygen"/></a> 1.7.1 </small></address>
</body>
</html>
