// PostProcessing Shaders
// David Evans, 2009

// Some of these are taken from the Irrlicht forums and modified to fit a common style. A couple could be optimized but they are fairly fast overall.

#define GL_V_FULLSCREEN "void main(){gl_Position=vec4(gl_Vertex.xy,0.0,1.0);gl_TexCoord[0]=gl_MultiTexCoord0;gl_FrontColor=vec4(1.0);}"
#define GL_V_FULLSCREENWITHVERTCOL "void main(){gl_Position=vec4(gl_Vertex.xy,0.0,1.0);gl_TexCoord[0]=gl_MultiTexCoord0;gl_FrontColor=gl_Color;}"

// This based on code and theory by Wojciech Toman; http://www.gamedev.net/reference/programming/features/ppWaterRender/
#define GL_WATER "uniform float time,ylevel,refraction,rZero,waveHeight,iWaveSize,iSmooth,sharp,iVis,iLPen;uniform vec3 pCamera,colSurf,colDeep;uniform sampler2D texture1,texture2;float hat(in vec2 p){return (sin(p.x*iWaveSize*0.9+p.y*iWaveSize*0.6+time*0.7+0.1)*sin(p.x*iWaveSize*1.1+time*0.65+0.9)+cos(p.y*iWaveSize*1.1+time*0.95+0.2)*cos(p.y*iWaveSize*0.7+time*0.61+0.6))*0.5*waveHeight;}void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);float zUnder=100.0/min(c.w,0.9999)-100.0;vec3 pUnder=(gl_ModelViewMatrixInverse*gl_ProjectionMatrixInverse*vec4((gl_TexCoord[0].xy*2.0-1.0)*zUnder,zUnder,zUnder)).xyz+pCamera;if(pUnder.y<ylevel){vec3 pWater=(pUnder-pCamera)*(ylevel-pCamera.y)/(pUnder.y-pCamera.y)+pCamera;float wave=hat(pWater.xz);pWater.y+=wave;vec3 nWater=normalize(vec3((wave-hat(vec2(pWater.x+0.0001,pWater.z)))*10000.0,1.0,(wave-hat(vec2(pWater.x,pWater.z+0.0001)))*10000.0));float fres=min((rZero+(1.0-rZero)*pow(dot(nWater,normalize(pWater-pCamera)),4.0)),1.0)*0.9+0.1,depth=length(pUnder-pWater),o=min(depth*iSmooth+sharp,1.0),vis=min(depth*iVis,1.0),lum=min((ylevel-pUnder.y)*iLPen,1.0);gl_FragColor=vec4((((texture2D(texture1,gl_TexCoord[0].xy-nWater.xz*depth*0.0001).xyz*(1.0-vis)+colSurf*vis)*lum+colDeep*(1.0-lum))*fres+texture2D(texture2,vec2(gl_TexCoord[0].x,1.0-gl_TexCoord[0].y)+nWater.xz*min((100.0/min(texture2D(texture2,vec2(gl_TexCoord[0].x,1.0-gl_TexCoord[0].y)).w,0.9999)-100.0)*0.001+0.005,0.5)).xyz*(1.0-fres))*o+c.xyz*(1.0-o),c.w);}else gl_FragColor=c;}"
#define GL_UNDERWATER "uniform float time,ylevel,refraction,rZero,waveHeight,iWaveSize,iSmooth,sharp,iVis,iLPen;uniform vec3 pCamera,colSurf,colDeep;uniform sampler2D texture1;float hat(in vec2 p){return (sin(p.x*iWaveSize*0.9+p.y*iWaveSize*0.6+time*0.7+0.1)*sin(p.x*iWaveSize*1.1+time*0.65+0.9)+cos(p.y*iWaveSize*1.1+time*0.95+0.2)*cos(p.y*iWaveSize*0.7+time*0.61+0.6))*0.5*waveHeight;}void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);float zUnder=100.0/min(c.w,0.9999)-100.0;vec3 pUnder=(gl_ModelViewMatrixInverse*gl_ProjectionMatrixInverse*vec4((gl_TexCoord[0].xy*2.0-1.0)*zUnder,zUnder,zUnder)).xyz+pCamera;vec3 pWater=(pUnder-pCamera)*(ylevel-pCamera.y)/(pUnder.y-pCamera.y)+pCamera;float wave=hat(pWater.xz);pWater.y+=wave;vec3 nWater=normalize(vec3((wave-hat(vec2(pWater.x+0.0001,pWater.z)))*10000.0,1.0,(wave-hat(vec2(pWater.x,pWater.z+0.0001)))*10000.0));float fres=min((rZero+(1.0-rZero)*pow(dot(nWater,normalize(pWater-pCamera)),4.0)),1.0)*0.9+0.1,depth=length(pUnder-pCamera),vis=min(depth*iVis*0.1,1.0),vis2=min(length(pWater-pCamera)*iVis*0.1,1.0);if(pUnder.y<pWater.y)gl_FragColor=vec4((c.xyz*colSurf*(1.0-vis)+colDeep*vis).xyz,c.w);else gl_FragColor=vec4(colDeep*vis2+((colSurf*fres+texture2D(texture1,gl_TexCoord[0].xy-nWater.xz*0.001).xyz*(1.0-fres))*fres+colDeep*(1.0-fres))*(1.0-vis2),0.0);}"

//#define GL_DIRECT "uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0]);}"
#define GL_PUNCH "uniform sampler2D texture1;uniform float v0,v1,v2,v3;void main(){float m=cos(sqrt((gl_TexCoord[0].x-v2)*(gl_TexCoord[0].x-v2)+(gl_TexCoord[0].y-v3)*(gl_TexCoord[0].y-v3))*6.28318530)*0.5+0.5;gl_FragColor=texture2D(texture1,vec2((gl_TexCoord[0].x-v2)*(1.0-m*v0)+v2,(gl_TexCoord[0].y-v3)*(1.0-m*v1)+v3));}"
#define GL_PIXELATE "uniform sampler2D texture1;uniform float v0,v1;void main(){gl_FragColor=texture2D(texture1,vec2((floor(gl_TexCoord[0].x/v0)+0.5)*v0,(floor(gl_TexCoord[0].y/v1)+0.5)*v1));}"
#define GL_PIXELATEBANDS "uniform sampler2D texture1;uniform float v0,v1,v2;void main(){vec4 m=vec4(1.0,1.0,1.0,1.0);if(fract(gl_TexCoord[0].y*0.5/v1)>=0.5)m=vec4(v2,v2,v2,1.0);gl_FragColor=m*texture2D(texture1,vec2((floor(gl_TexCoord[0].x/v0)+0.5)*v0,(floor(gl_TexCoord[0].y/v1)+0.5)*v1));}"
#define GL_DARKEN "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*vec4(vec3(v0),1.0);}"
#define GL_LIGHTEN "uniform float v0;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(1.0-v0+c.xyz*v0,c.w);}"
#define GL_POSTERIZE "uniform float v0;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(floor(c.xyz*v0)/(v0-1.0),c.w);}"
#define GL_RANGE "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4((c.xyz-v0)/(v1-v0),c.w);}"
#define GL_INVERT "uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(1.0-c.xyz,c.w);}"
#define GL_HBLUR_3 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y)))*0.33333333;}"
#define GL_VBLUR_3 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0)))*0.33333333;}"
#define GL_HSHARPEN_3 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(c.xyz*(1.0+v1*3.0)-(texture2D(texture1,vec2(gl_TexCoord[0].x+v0*0.5,gl_TexCoord[0].y)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x-v0*0.5,gl_TexCoord[0].y)).xyz)*1.5*v1,c.w);}"
#define GL_VSHARPEN_3 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(c.xyz*(1.0+v1*3.0)-(texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0*0.5)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0*0.5)).xyz)*1.5*v1,c.w);}"
#define GL_BIBLUR_5 "uniform float v0,v1;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v1)))*0.2;}"
#define GL_HBLURDOFFAR_3 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((min(d.w,i.w)-v0)/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((d.w-v0)/(v1-v0),0.0,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(r,0.0),d)+tat(vec2(-r,0.0),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_VBLURDOFFAR_3 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((min(d.w,i.w)-v0)/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((d.w-v0)/(v1-v0),0.0,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(0.0,r),d)+tat(vec2(0.0,-r),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_HBLURDOFNEAR_3 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((v1-max(min(d.w,v1-0.4*(v1-v0)),i.w))/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((v1-d.w)/(v1-v0),0.4,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(r,0.0),d)+tat(vec2(-r,0.0),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_VBLURDOFNEAR_3 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((v1-max(min(d.w,v1-0.4*(v1-v0)),i.w))/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((v1-d.w)/(v1-v0),0.4,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(0.0,r),d)+tat(vec2(0.0,-r),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_LINEARBLUR_3 "uniform float v0,v1;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y-v1)))*0.33333333;}"
#define GL_RADIALBLUR_3 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,gl_TexCoord[0].xy-d*0.5)+texture2D(texture1,gl_TexCoord[0].xy-d))*0.33333333;}"
#define GL_RADIALBEAM_3 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*1.8+texture2D(texture1,gl_TexCoord[0].xy-d*0.5)+texture2D(texture1,gl_TexCoord[0].xy-d)*0.2;}"
#define GL_ROTATIONALBLUR_3 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].y-v0)*v2*4.0,(v1-gl_TexCoord[0].x)*v3*4.0);gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,gl_TexCoord[0].xy-d)+texture2D(texture1,gl_TexCoord[0].xy+d))*0.33333333;}"
#define GL_HBLUR_5 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x+v0*0.5,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0*0.5,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y)))*0.2;}"
#define GL_VBLUR_5 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0*0.5))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0*0.5))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0)))*0.2;}"
#define GL_HSHARPEN_5 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(c.xyz*(1.0+v1*3.0)-(texture2D(texture1,vec2(gl_TexCoord[0].x+v0*0.5,gl_TexCoord[0].y)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x-v0*0.5,gl_TexCoord[0].y)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y)).xyz*0.5+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y)).xyz*0.5)*v1,c.w);}"
#define GL_VSHARPEN_5 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(c.xyz*(1.0+v1*3.0)-(texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0*0.5)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0*0.5)).xyz+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v0)).xyz*0.5+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v0)).xyz*0.5)*v1,c.w);}"
#define GL_BIBLUR_9 "uniform float v0,v1;uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*0.15+(texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-v1)))*0.125+(texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y-v1))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y-v1)))*0.0875;}"
#define GL_HBLURDOFFAR_5 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((min(d.w,i.w)-v0)/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((d.w-v0)/(v1-v0),0.0,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(r*0.5,0.0),d)+tat(vec2(-r*0.5,0.0),d))*2.0+(tat(vec2(r,0.0),d)+tat(vec2(-r,0.0),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_VBLURDOFFAR_5 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((min(d.w,i.w)-v0)/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((d.w-v0)/(v1-v0),0.0,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(0.0,r*0.5),d)+tat(vec2(0.0,-r*0.5),d))*2.0+(tat(vec2(0.0,r),d)+tat(vec2(0.0,-r),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_HBLURDOFNEAR_5 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((v1-max(min(d.w,v1-0.4*(v1-v0)),i.w))/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((v1-d.w)/(v1-v0),0.4,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(r*0.5,0.0),d)+tat(vec2(-r*0.5,0.0),d))*2.0+(tat(vec2(r,0.0),d)+tat(vec2(-r,0.0),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_VBLURDOFNEAR_5 "uniform float v0,v1,v2;uniform sampler2D texture1;vec4 tat(in vec2 p,in vec4 d){vec4 i=texture2D(texture1,gl_TexCoord[0].xy+p);i.w=100.0/i.w-100.0;return vec4(i.xyz,0.1)*clamp((v1-max(min(d.w,v1-0.4*(v1-v0)),i.w))/(v1-v0),0.0,1.0);}void main(){vec4 d=texture2D(texture1,gl_TexCoord[0].xy);float dd=d.w;d.w=100.0/d.w-100.0;float r=clamp((v1-d.w)/(v1-v0),0.4,1.0)*v2;vec4 c=vec4(d.xyz,0.1)+(tat(vec2(0.0,r*0.5),d)+tat(vec2(0.0,-r*0.5),d))*2.0+(tat(vec2(0.0,r),d)+tat(vec2(0.0,-r),d))*1.5;gl_FragColor=vec4(c.xyz*0.1/c.w,dd);}"
#define GL_LINEARBLUR_5 "uniform float v0,v1;uniform sampler2D texture1;void main(){gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,vec2(gl_TexCoord[0].x+v0*0.5,gl_TexCoord[0].y+v1*0.5))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0*0.5,gl_TexCoord[0].y-v1*0.5))+texture2D(texture1,vec2(gl_TexCoord[0].x+v0,gl_TexCoord[0].y+v1))+texture2D(texture1,vec2(gl_TexCoord[0].x-v0,gl_TexCoord[0].y-v1)))*0.2;}"
#define GL_RADIALBLUR_5 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,gl_TexCoord[0].xy-d*0.25)+texture2D(texture1,gl_TexCoord[0].xy-d*0.5)+texture2D(texture1,gl_TexCoord[0].xy-d*0.75)+texture2D(texture1,gl_TexCoord[0].xy-d))*0.2;}"
#define GL_RADIALBEAM_5 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,gl_TexCoord[0].xy-d*0.25)*0.8+texture2D(texture1,gl_TexCoord[0].xy-d*0.5)*0.6+texture2D(texture1,gl_TexCoord[0].xy-d*0.75)*0.4+texture2D(texture1,gl_TexCoord[0].xy-d)*0.2;}"
#define GL_ROTATIONALBLUR_5 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].y-v0)*v2*4.0,(v1-gl_TexCoord[0].x)*v3*4.0);gl_FragColor=(texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture1,gl_TexCoord[0].xy-d*0.5)+texture2D(texture1,gl_TexCoord[0].xy+d*0.5)+texture2D(texture1,gl_TexCoord[0].xy-d)+texture2D(texture1,gl_TexCoord[0].xy+d))*0.2;}"
#define GL_HBLUR_11 "uniform float v0;uniform sampler2D texture1;void main(){vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.2)Color+=texture2D(texture1,vec2(gl_TexCoord[0].x+i*v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-i*v0,gl_TexCoord[0].y));gl_FragColor=Color*0.09090909;}"
#define GL_VBLUR_11 "uniform float v0;uniform sampler2D texture1;void main(){vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.2)Color+=texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+i*v0))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-i*v0));gl_FragColor=Color*0.09090909;}"
#define GL_HSHARPEN_11 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 m=texture2D(texture1,gl_TexCoord[0].xy),c=m*(1.0+v1*3.0);for(float i=1.0;i>0.01;i-=0.2)c-=(texture2D(texture1,vec2(gl_TexCoord[0].x+i*v0,gl_TexCoord[0].y))+texture2D(texture1,vec2(gl_TexCoord[0].x-i*v0,gl_TexCoord[0].y)))*(1.2-i)*v1*0.5;gl_FragColor=vec4(c.xyz,m.w);}"
#define GL_VSHARPEN_11 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 m=texture2D(texture1,gl_TexCoord[0].xy),c=m*(1.0+v1*3.0);for(float i=1.0;i>0.01;i-=0.2)c-=(texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y+i*v0))+texture2D(texture1,vec2(gl_TexCoord[0].x,gl_TexCoord[0].y-i*v0)))*(1.2-i)*v1*0.5;gl_FragColor=vec4(c.xyz,m.w);}"
#define GL_BIBLUR_13 "uniform float v0,v1;uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*0.1+(texture2D(texture1,vec2(gl_TexCoord[0].xy.x,gl_TexCoord[0].xy.y-v1))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x+v0*0.6,gl_TexCoord[0].xy.y-v1*0.8))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x-v0*0.8,gl_TexCoord[0].xy.y-v1*0.6))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x-v0*0.2,gl_TexCoord[0].xy.y-v1*0.4))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x+v0*0.4,gl_TexCoord[0].xy.y-v1*0.2))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x+v0,gl_TexCoord[0].xy.y))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x-v0,gl_TexCoord[0].xy.y))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x-v0*0.4,gl_TexCoord[0].xy.y+v1*0.2))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x+v0*0.2,gl_TexCoord[0].xy.y+v1*0.4))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x+v0*0.8,gl_TexCoord[0].xy.y+v1*0.6))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x-v0*0.6,gl_TexCoord[0].xy.y+v1*0.8))+texture2D(texture1,vec2(gl_TexCoord[0].xy.x,gl_TexCoord[0].xy.y+v1)))*0.075;}"
#define GL_LINEARBLUR_11 "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.2)Color+=texture2D(texture1,vec2(gl_TexCoord[0].x+i*v0,gl_TexCoord[0].y+i*v1))+texture2D(texture1,vec2(gl_TexCoord[0].x-i*v0,gl_TexCoord[0].y-i*v1));gl_FragColor=Color*0.09090909;}"
#define GL_RADIALBLUR_11 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.1)Color+=texture2D(texture1,gl_TexCoord[0].xy-d*i);gl_FragColor=Color*0.09090909;}"
#define GL_RADIALBEAM_11 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].x-v0)*v2*4.0,(gl_TexCoord[0].y-v1)*v3*4.0);vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.1)Color+=texture2D(texture1,gl_TexCoord[0].xy-d*i)*(1.0-i*0.9090909);gl_FragColor=Color;}"
#define GL_ROTATIONALBLUR_11 "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec2 d=vec2((gl_TexCoord[0].y-v0)*v2*4.0,(v1-gl_TexCoord[0].x)*v3*4.0);vec4 Color=texture2D(texture1,gl_TexCoord[0].xy);for(float i=1.0;i>0.01;i-=0.2)Color+=texture2D(texture1,gl_TexCoord[0].xy+d*i)+texture2D(texture1,gl_TexCoord[0].xy-d*i);gl_FragColor=Color*0.09090909;}"
#define GL_OVERLAY "uniform float v0;uniform sampler2D texture1,texture2;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)+texture2D(texture2,gl_TexCoord[0].xy)*v0;}"
#define GL_OVERLAY2 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*v0;}"
#define GL_OVERLAYNEG "uniform float v0;uniform sampler2D texture1,texture2;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)-v0+texture2D(texture2,gl_TexCoord[0].xy)*v0;}"
#define GL_OVERLAYNEG2 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=v0-texture2D(texture1,gl_TexCoord[0].xy)*v0;}"
#define GL_MOTIONBLUR "uniform float v0;uniform sampler2D texture1,texture2;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*(1.0-v0)+texture2D(texture2,gl_TexCoord[0].xy)*v0;}"
#define GL_MOTIONBLUR2 "uniform float v0;uniform sampler2D texture1;void main(){gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy).xyz,v0);}"
#define GL_TINT "uniform float v0,v1,v2,v3;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);float i=dot(c,vec4(0.2,0.5,0.3,0.0));gl_FragColor=vec4(pow(i,1.0/v0),pow(i,1.0/v1),pow(i,1.0/v2),c.w)*v3+c*(1.0-v3);}"
#define GL_CURVES "uniform float v0,v1,v2;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(pow(c.x,1.0/v0),pow(c.y,1.0/v1),pow(c.z,1.0/v2),c.w);}"
#define GL_VIGNETTE "uniform float v0,v1,v2;uniform sampler2D texture1;void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)*vec4(vec3(clamp((pow(abs(gl_TexCoord[0].x-0.5)*2.0,v0)+pow(abs(gl_TexCoord[0].y-0.5)*2.0,v0)-v2)/(v1-v2),0.0,1.0)),1.0);}"
#define GL_NOISE "uniform float randNum,v0;uniform sampler2D texture1;float rand(in float s){return fract(gl_TexCoord[0].x*(1009.0+s*10.0)+tan(gl_TexCoord[0].y*(1090.0+s*100.0)+gl_TexCoord[0].x*111.0)+s+gl_TexCoord[0].y*10000.0)-0.5;}void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)+vec4(vec3(rand(randNum)*v0),0.0);}"
#define GL_PURENOISE "uniform float randNum,v0;float rand(in float s){return fract(gl_TexCoord[0].x*(1009.0+s*10.0)+tan(gl_TexCoord[0].y*(1090.0+s*100.0)+gl_TexCoord[0].x*111.0)+s+gl_TexCoord[0].y*10000.0)-0.5;}void main(){gl_FragColor=vec4(vec3(0.5+rand(randNum)*v0),0.0);}"
#define GL_HAZE "uniform float time,v0,v1,v2,v3;uniform sampler2D texture1,texture2;void main(){gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy+vec2(sin(gl_TexCoord[0].x*v3*157.5+gl_TexCoord[0].y*v3*91.5-time*v2*24.15)+cos(-gl_TexCoord[0].x*v3*210.5+gl_TexCoord[0].y*v3*186.3-time*v2*26.63),cos(gl_TexCoord[0].x*v3*160.5+gl_TexCoord[0].y*v3*126.3-time*v2*24.63)+sin(-gl_TexCoord[0].x*v3*157.5+gl_TexCoord[0].y*v3*61.5-time*v2*16.65))*texture2D(texture2,gl_TexCoord[0].xy).x*v0).xyz*v1+texture2D(texture1,gl_TexCoord[0].xy).xyz*(1.0-v1),texture2D(texture1,gl_TexCoord[0].xy).w);}"
#define GL_HAZEDEPTH "uniform float time,v0,v1,v2,v3;uniform sampler2D texture1,texture2;void main(){float m=clamp((100.0/texture2D(texture1,gl_TexCoord[0].xy).w-100.0/max(texture2D(texture2,gl_TexCoord[0].xy).y,0.001))*0.005,0.0,1.0);gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy+vec2(sin((gl_TexCoord[0].x*v3*157.5+gl_TexCoord[0].y*v3*91.5)*m-time*v2*24.15)+cos((-gl_TexCoord[0].x*v3*210.5+gl_TexCoord[0].y*v3*186.3)*m-time*v2*26.63),cos((gl_TexCoord[0].x*v3*160.5+gl_TexCoord[0].y*v3*126.3)*m-time*v2*24.63)+sin((-gl_TexCoord[0].x*v3*157.5+gl_TexCoord[0].y*v3*61.5)*m-time*v2*16.65))*texture2D(texture2,gl_TexCoord[0].xy).x*v0*m).xyz*v1+texture2D(texture1,gl_TexCoord[0].xy).xyz*(1.0-v1),texture2D(texture1,gl_TexCoord[0].xy).w);}"
#define GL_DEPTH "uniform float v0,v1;uniform sampler2D texture1;void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);gl_FragColor=vec4(vec3((100.0/c.w-100.0-v0)/(v1-v0)),c.w);}"
#define GL_COLORNOISE "uniform float randNum,v0;uniform sampler2D texture1;float rand(in float s){return fract(gl_TexCoord[0].x*(1009.0+s*10.0)+tan(gl_TexCoord[0].y*(1090.0+s*100.0)+gl_TexCoord[0].x*111.0)+s+gl_TexCoord[0].y*10000.0)-0.5;}void main(){gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy)+vec4(rand(randNum),rand(randNum-0.5),rand(randNum-1.0),0.0)*v0;}"
// Occlusion taken from an example on the Irrlicht forums and mutilated. Uses alpha as depth.
#define GL_OCCLUSION "uniform sampler2D texture1;uniform float v0,v1,v2;float dat(in vec2 p){return 100.0/(texture2D(texture1,p).w+0.000001);}void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);if(c.w==0.0){gl_FragColor=c;return;}vec2 px=vec2(v0,v1);float m=v2,depth=dat(gl_TexCoord[0].xy)-2.0,ao=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);px*=2.0;m*=0.5;ao+=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);px*=2.0;m*=0.5;ao+=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);px*=2.0;m*=0.5;ao+=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);gl_FragColor=vec4((1.0-ao*0.0625)*c.xyz,c.w);}"
#define GL_OCCLUSIONFAST "uniform sampler2D texture1;uniform float v0,v1,v2;float dat(in vec2 p){return 100.0/(texture2D(texture1,p).w+0.000001);}void main(){vec4 c=texture2D(texture1,gl_TexCoord[0].xy);if(c.w==0.0){gl_FragColor=c;return;}vec2 px=vec2(v0,v1);float m=v2,depth=dat(gl_TexCoord[0].xy)-2.0,ao=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);px*=3.0;m*=0.33333333;ao+=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);px*=3.0;m*=0.333333;ao+=clamp((depth-dat(gl_TexCoord[0].xy+px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(px.x,-px.y)))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy-px))*m,0.0,1.0)+clamp((depth-dat(gl_TexCoord[0].xy+vec2(-px.x,px.y)))*m,0.0,1.0);gl_FragColor=vec4((1.0-ao*0.083333)*c.xyz,c.w);}"
#define GL_TRANSMAP "uniform float v0;uniform sampler2D texture1,texture2;void main(){gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy).xyz,clamp(v0-texture2D(texture2,gl_TexCoord[0].xy).x,0.0,0.1)*10.0);}"
#define GL_TRANSMAPFAST "uniform float v0;uniform sampler2D texture1,texture2;void main(){if(v0<texture2D(texture2,gl_TexCoord[0].xy).x)discard;gl_FragColor=texture2D(texture1,gl_TexCoord[0].xy);}"

#define GL_V_MAT "varying vec3 N,v;varying float s,z,clip;void main(){v=vec3(gl_ModelViewMatrix*gl_Vertex);N=normalize(gl_NormalMatrix*gl_Normal);s=pow(1.0+dot(N,normalize(v)),3.0);gl_Position=gl_ModelViewProjectionMatrix*gl_Vertex;z=gl_Position.z;gl_TexCoord[0]=gl_MultiTexCoord0;gl_FrontColor=gl_Color;clip=-gl_ClipPlane[0].w-dot(gl_ClipPlane[0].xyz,(gl_ModelViewMatrix*gl_Vertex).xyz);}"

#define GL_HEATSOURCE "uniform sampler2D texture1;varying float z;void main(){gl_FragColor=vec4(1.0,100.0/(z+100.0),0.0,texture2D(texture1,gl_TexCoord[0].xy).x*1.0);}"
#define GL_WHITE "varying float z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(1.0,1.0,1.0,100.0/(z+100.0));}"
#define GL_WHITE1 "varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4((gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_WHITE2 "varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4((gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)+gl_LightSource[1].ambient.xyz+gl_LightSource[1].diffuse.xyz*max(dot(N,normalize(gl_LightSource[1].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_PLAIN "uniform sampler2D texture1;varying float z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy).xyz,100.0/(z+100.0));}"
#define GL_PLAIN1 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy).xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_PLAIN2 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(texture2D(texture1,gl_TexCoord[0].xy).xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)+gl_LightSource[1].ambient.xyz+gl_LightSource[1].diffuse.xyz*max(dot(N,normalize(gl_LightSource[1].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_PLAINREF "uniform sampler2D texture1;varying float z,clip;void main(){if(clip>0.0)discard;vec4 c=texture2D(texture1,gl_TexCoord[0].xy);if(c.w<0.5)discard;gl_FragColor=vec4(c.xyz,100.0/(z+100.0));}"
#define GL_PLAINREF1 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;vec4 c=texture2D(texture1,gl_TexCoord[0].xy);if(c.w<0.5)discard;gl_FragColor=vec4(c.xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_PLAINREF2 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;vec4 c=texture2D(texture1,gl_TexCoord[0].xy);if(c.w<0.5)discard;gl_FragColor=vec4(c.xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)+gl_LightSource[1].ambient.xyz+gl_LightSource[1].diffuse.xyz*max(dot(N,normalize(gl_LightSource[1].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_FELT1 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(vec3(0.1,0.2,0.3)*min(1.0,s)+texture2D(texture1,gl_TexCoord[0].xy).xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)),100.0/(z+100.0));}"
#define GL_FELT2 "uniform sampler2D texture1;varying vec3 N,v;varying float s,z,clip;void main(){if(clip>0.0)discard;gl_FragColor=vec4(vec3(0.1,0.2,0.3)*min(1.0,s)+texture2D(texture1,gl_TexCoord[0].xy).xyz*(gl_LightSource[0].ambient.xyz+gl_LightSource[0].diffuse.xyz*max(dot(N,normalize(gl_LightSource[0].position.xyz-v)),0.0)+gl_LightSource[1].ambient.xyz+gl_LightSource[1].diffuse.xyz*max(dot(N,normalize(gl_LightSource[1].position.xyz-v)),0.0)),100.0/(z+100.0));}"

// I haven't got around to converting all the shaders for directX yet. If you convert them yourself please post them on the forums!
#define DX_V_FULLSCREEN "struct VS_OUTPUT{float4 Pos:POSITION;float2 Tex:TEXCOORD0;};VS_OUTPUT main(in float4 p:POSITION,in float2 t:TEXCOORD0){VS_OUTPUT o;o.Pos=float4(p.xy,0.0,1.0);o.Tex=float2(t.x,1.0-t.y);return o;}"
#define DX_V_FULLSCREENWITHVERTCOL "struct VS_OUTPUT{float4 Pos:POSITION;float4 Col:COLOR0;float2 Tex:TEXCOORD0;};VS_OUTPUT main(in float4 p:POSITION,in float2 t:TEXCOORD0,in float4 c:COLOR0){VS_OUTPUT o;o.Pos=float4(p.xy,0.0,1.0);o.Col=c;o.Tex=t;return o;}"

#define DX_WATER NULL
#define DX_UNDERWATER NULL

//#define DX_DIRECT "sampler2D s;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t);}"
#define DX_PUNCH "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float m=cos(sqrt((t.x-v2)*(t.x-v2)+(t.y-v3)*(t.y-v3))*6.28318530)*0.5+0.5;return tex2D(s,float2((t.x-v2)*(1.0-m*v0)+v2,(t.y-v3)*(1.0-m*v1)+v3));}"
#define DX_PIXELATE "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,float2((floor(t.x/v0)+0.5)*v0,(floor(t.y/v1)+0.5)*v1));}"
#define DX_PIXELATEBANDS "sampler2D s;float v0,v1,v2;float4 main(float2 t:TEXCOORD0):COLOR{float4 m=float4(1.0,1.0,1.0,1.0);if(frac(t.y*0.5/v1)>=0.5)m=float4(v2,v2,v2,1.0);return m*tex2D(s,float2((floor(t.x/v0)+0.5)*v0,(floor(t.y/v1)+0.5)*v1));}"
#define DX_DARKEN "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)*float4(v0,v0,v0,1.0);}"
#define DX_LIGHTEN "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(c.xyz*v0+1.0-v0,c.w);}"
#define DX_POSTERIZE "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(floor(c.xyz*v0)/(v0-1.0),c.w);}"
#define DX_RANGE "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(saturate((c.xyz-v0)/(v1-v0)),c.w);}"
#define DX_INVERT "sampler2D s;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(1.0-c.xyz,c.w);}"
#define DX_HBLUR_3 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(v0,0.0))+tex2D(s,t+float2(v0,0.0)))*0.33333333;}"
#define DX_VBLUR_3 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(0.0,v0))+tex2D(s,t+float2(0.0,v0)))*0.33333333;}"
#define DX_HSHARPEN_3 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(c.xyz*(1.0+v1*3.0)-(tex2D(s,t-float2(v0*0.5,0.0)).xyz+tex2D(s,t+float2(v0*0.5,0.0)).xyz)*1.5*v1,c.w);}"
#define DX_VSHARPEN_3 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(c.xyz*(1.0+v1*3.0)-(tex2D(s,t-float2(0.0,v0*0.5)).xyz+tex2D(s,t+float2(0.0,v0*0.5)).xyz)*1.5*v1,c.w);}"
#define DX_BIBLUR_5 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(v0,0.0))+tex2D(s,t-float2(v0,0.0))+tex2D(s,t+float2(0.0,v1))+tex2D(s,t-float2(0.0,v1)))*0.2;}"
#define DX_HBLURDOFFAR_3 NULL
#define DX_VBLURDOFFAR_3 NULL
#define DX_HBLURDOFNEAR_3 NULL
#define DX_VBLURDOFNEAR_3 NULL
#define DX_LINEARBLUR_3 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(v0,v1))+tex2D(s,t+float2(v0,v1)))*0.33333333;}"
#define DX_RADIALBLUR_3 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);return (tex2D(s,t)+tex2D(s,t-d*0.5)+tex2D(s,t-d))*0.33333333;}"
#define DX_RADIALBEAM_3 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);return tex2D(s,t)*1.8+tex2D(s,t-d*0.5)+tex2D(s,t-d)*0.2;}"
#define DX_ROTATIONALBLUR_3 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.y-v0)*v2*4.0,(v1-t.x)*v3*4.0);return (tex2D(s,t)+tex2D(s,t-d)+tex2D(s,t+d))*0.33333333;}"
#define DX_HBLUR_5 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(v0*0.5,0.0))+tex2D(s,t+float2(v0*0.5,0.0))+tex2D(s,t-float2(v0,0.0))+tex2D(s,t+float2(v0,0.0)))*0.2;}"
#define DX_VBLUR_5 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(0.0,v0*0.5))+tex2D(s,t+float2(0.0,v0*0.5))+tex2D(s,t-float2(0.0,v0))+tex2D(s,t+float2(0.0,v0)))*0.2;}"
#define DX_HSHARPEN_5 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(c.xyz*(1.0+v1*3.0)-(tex2D(s,t-float2(v0*0.5,0.0)).xyz+tex2D(s,t+float2(v0*0.5,0.0)).xyz+tex2D(s,t-float2(v0,0.0)).xyz*0.5+tex2D(s,t+float2(v0,0.0)).xyz*0.5)*v1,c.w);}"
#define DX_VSHARPEN_5 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(c.xyz*(1.0+v1*3.0)-(tex2D(s,t-float2(0.0,v0*0.5)).xyz+tex2D(s,t+float2(0.0,v0*0.5)).xyz+tex2D(s,t-float2(0.0,v0)).xyz*0.5+tex2D(s,t+float2(0.0,v0)).xyz*0.5)*v1,c.w);}"
#define DX_BIBLUR_9 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)*0.15+(tex2D(s,t-float2(v0,0.0))+tex2D(s,t-float2(v0,0.0))+tex2D(s,t+float2(0.0,v1))+tex2D(s,t-float2(0.0,v1)))*0.125+(tex2D(s,t-float2(v0,v1))+tex2D(s,t-float2(v0,v1))+tex2D(s,t+float2(v0,-v1))+tex2D(s,t-float2(v0,-v1)))*0.0875;}"
#define DX_HBLURDOFFAR_5 NULL
#define DX_VBLURDOFFAR_5 NULL
#define DX_HBLURDOFNEAR_5 NULL
#define DX_VBLURDOFNEAR_5 NULL
#define DX_LINEARBLUR_5 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return (tex2D(s,t)+tex2D(s,t-float2(v0*0.5,v1*0.5))+tex2D(s,t+float2(v0*0.5,v1*0.5))+tex2D(s,t-float2(v0,v1))+tex2D(s,t+float2(v0,v1)))*0.2;}"
#define DX_RADIALBLUR_5 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);return (tex2D(s,t)+tex2D(s,t-d*0.25)+tex2D(s,t-d*0.5)+tex2D(s,t-d*0.75)+tex2D(s,t-d))*0.2;}"
#define DX_RADIALBEAM_5 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);return tex2D(s,t)+tex2D(s,t-d*0.25)*0.8+tex2D(s,t-d*0.5)*0.6+tex2D(s,t-d*0.75)*0.4+tex2D(s,t-d)*0.2;}"
#define DX_ROTATIONALBLUR_5 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.y-v0)*v2*4.0,(v1-t.x)*v3*4.0);return (tex2D(s,t)+tex2D(s,t-d*0.5)+tex2D(s,t+d*0.5)+tex2D(s,t-d)+tex2D(s,t+d))*0.2;}"
#define DX_HBLUR_11 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.2)c+=tex2D(s,float2(t.x+i*v0,t.y))+tex2D(s,float2(t.x-i*v0,t.y));return c*0.09090909;}"
#define DX_VBLUR_11 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.2)c+=tex2D(s,float2(t.x,t.y+i*v0))+tex2D(s,float2(t.x,t.y-i*v0));return c*0.09090909;}"
#define DX_HSHARPEN_11 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 m=tex2D(s,t),c=m*(1.0+v1*3.0);for(float i=1.0;i>0.01;i-=0.2)c-=(tex2D(s,float2(t.x+i*v0,t.y))+tex2D(s,float2(t.x-i*v0,t.y)))*(1.2-i)*v1*0.5;return float4(c.xyz,m.w);}"
#define DX_VSHARPEN_11 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 m=tex2D(s,t),c=m*(1.0+v1*3.0);for(float i=1.0;i>0.01;i-=0.2)c-=(tex2D(s,float2(t.x,t.y+i*v0))+tex2D(s,float2(t.x,t.y-i*v0)))*(1.2-i)*v1*0.5;return float4(c.xyz,m.w);}"
#define DX_BIBLUR_13 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)*0.1+(tex2D(s,float2(t.x,t.y-v1))+tex2D(s,float2(t.x+v0*0.6,t.y-v1*0.8))+tex2D(s,float2(t.x-v0*0.8,t.y-v1*0.6))+tex2D(s,float2(t.x-v0*0.2,t.y-v1*0.4))+tex2D(s,float2(t.x+v0*0.4,t.y-v1*0.2))+tex2D(s,float2(t.x+v0,t.y))+tex2D(s,float2(t.x-v0,t.y))+tex2D(s,float2(t.x-v0*0.4,t.y+v1*0.2))+tex2D(s,float2(t.x+v0*0.2,t.y+v1*0.4))+tex2D(s,float2(t.x+v0*0.8,t.y+v1*0.6))+tex2D(s,float2(t.x-v0*0.6,t.y+v1*0.8))+tex2D(s,float2(t.x,t.y+v1)))*0.075;}"
#define DX_LINEARBLUR_11 "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.2)c+=tex2D(s,float2(t.x+i*v0,t.y+i*v1))+tex2D(s,float2(t.x-i*v0,t.y-i*v1));return c*0.09090909;}"
#define DX_RADIALBLUR_11 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.1)c+=tex2D(s,t-i*d);return c*0.09090909;}"
#define DX_RADIALBEAM_11 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.x-v0)*v2*4.0,(t.y-v1)*v3*4.0);float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.1)c+=tex2D(s,t-i*d)*(1.0-i*0.9090909);return c;}"
#define DX_ROTATIONALBLUR_11 "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float2 d=float2((t.y-v0)*v2*4.0,(v1-t.x)*v3*4.0);float4 c=tex2D(s,t);for(float i=1.0;i>0.01;i-=0.1)c+=tex2D(s,t-i*d);return c*0.09090909;}"
#define DX_OVERLAY "sampler2D s:register(s0),s2:register(s1);float v0;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)+tex2D(s2,t)*v0;}"
#define DX_OVERLAY2 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)*v0;}"
#define DX_OVERLAYNEG "sampler2D s:register(s0),s2:register(s1);float v0;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)-v0+tex2D(s2,t)*v0;}"
#define DX_OVERLAYNEG2 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return v0-tex2D(s,t)*v0;}"
#define DX_MOTIONBLUR "sampler2D s:register(s0),s2:register(s1);float v0;float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)*(1.0-v0)+tex2D(s2,t)*v0;}"
#define DX_MOTIONBLUR2 "sampler2D s;float v0;float4 main(float2 t:TEXCOORD0):COLOR{return float4(tex2D(s,t).xyz,v0);}"
#define DX_TINT "sampler2D s;float v0,v1,v2,v3;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);float i=dot(c,float4(0.2,0.5,0.3,0.0));return float4(pow(i,1.0/v0),pow(i,1.0/v1),pow(i,1.0/v2),c.w)*v3+c*(1.0-v3);}"
#define DX_CURVES "sampler2D s;float v0,v1,v2;float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);return float4(pow(c.x,1.0/v0),pow(c.y,1.0/v1),pow(c.z,1.0/v2),c.w);}"
#define DX_VIGNETTE "sampler2D s;float v0,v1,v2;float4 main(float2 t:TEXCOORD0):COLOR{float l=saturate((pow(abs(t.x-0.5)*2.0,v0)+pow(abs(t.y-0.5)*2.0,v0)-v2)/(v1-v2));return tex2D(s,t.xy)*float4(l,l,l,1.0);}"
#define DX_NOISE "sampler2D s;float randNum,v0;float rand(in float2 t,in float s){return frac(t.x*(1009.0+s*10.0)+tan(t.y*(1090.0+s*100.0)+t.x*111.0)+s+t.y*10000.0)-0.5;}float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)+float4(float3(v0,v0,v0)*rand(t,randNum),0.0);}"
#define DX_PURENOISE "float randNum,v0;float rand(in float2 t,in float s){return frac(t.x*(1009.0+s*10.0)+tan(t.y*(1090.0+s*100.0)+t.x*111.0)+s+t.y*10000.0)-0.5;}float4 main(float2 t:TEXCOORD0):COLOR{return float4(float3(0.5,0.5,0.5)+float3(v0,v0,v0)*rand(t,randNum),0.0);}"
#define DX_COLORNOISE "sampler2D s;float randNum,v0;float rand(in float2 t,in float s){return frac(t.x*(1009.0+s*10.0)+tan(t.y*(1090.0+s*100.0)+t.x*111.0)+s+t.y*10000.0)-0.5;}float4 main(float2 t:TEXCOORD0):COLOR{return tex2D(s,t)+float4(rand(t,randNum),rand(t,randNum-0.5),rand(t,randNum-1.0),0.0)*v0;}"
#define DX_HAZE NULL
#define DX_HAZEDEPTH NULL
#define DX_DEPTH "sampler2D s;float v0,v1;float4 main(float2 t:TEXCOORD0):COLOR{float a=tex2D(s,t).w;float l=saturate((100.0/(1.0-a)-100.0-v0)/(v1-v0));return float4(l,l,l,a);}"
// For now, occlusion is much simpler in DirectX than OpenGL, because DirectX pixel shaders have a lower limit on instructions in version 2.0
#define DX_OCCLUSION "sampler2D s;float v0,v1,v2;float dat(in float2 p){return 100.0/(tex2D(s,p).w);}float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);if(c.w==0.0)return c;else{float2 px=float2(v0,v1),pxb=float2(v1,v0);float m=v2,depth=dat(t)-2.0,ao=saturate((depth-dat(t+px))*m)+saturate((depth-dat(t+pxb))*m)+saturate((depth-dat(t-px))*m)+saturate((depth-dat(t-pxb))*m);px*=3.0;pxb*=3.0;m*=0.33333333;ao+=saturate((depth-dat(t+px))*m)+saturate((depth-dat(t+pxb))*m)+saturate((depth-dat(t-px))*m)+saturate((depth-dat(t-pxb))*m);return float4((1.0-ao*0.125)*c.xyz,c.w);}}"
#define DX_OCCLUSIONFAST "sampler2D s;float v0,v1,v2;float dat(in float2 p){return 100.0/(tex2D(s,p).w);}float4 main(float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);if(c.w==0.0)return c;else{float2 px=float2(v0,v1),pxb=float2(v1,v0);float m=v2,depth=dat(t)-2.0,ao=saturate((depth-dat(t+px))*m)+saturate((depth-dat(t+pxb))*m)+saturate((depth-dat(t-px))*m)+saturate((depth-dat(t-pxb))*m);px*=3.0;pxb*=3.0;m*=0.33333333;ao+=saturate((depth-dat(t+px))*m)+saturate((depth-dat(t+pxb))*m)+saturate((depth-dat(t-px))*m)+saturate((depth-dat(t-pxb))*m);return float4((1.0-ao*0.125)*c.xyz,c.w);}}"
#define DX_TRANSMAP "sampler2D s:register(s0),s2:register(s1);float v0;float4 main(float2 t:TEXCOORD0):COLOR{return float4(tex2D(s,t).xyz,clamp(v0-tex2D(s2,t).x,0.0,0.1)*10.0);}"
#define DX_TRANSMAPFAST "sampler2D s:register(s0),s2:register(s1);float v0;float4 main(float2 t:TEXCOORD0):COLOR{if(v0<tex2D(s2,t).x)discard;return tex2D(s,t);}"

#define DX_V_MAT "float4x4 worldViewProj;struct VS_OUTPUT{float4 Pos:POSITION;float2 Tex:TEXCOORD0;float z:TEXCOORD1;};VS_OUTPUT main(in float4 p:POSITION,in float2 t:TEXCOORD0){VS_OUTPUT o;o.Pos=mul(p,worldViewProj);o.Tex=t;o.z=o.Pos.z;return o;}"

// ToDo: lights
#define DX_HEATSOURCE "sampler2D s;float4 main(float z:TEXCOORD1,float2 t:TEXCOORD0):COLOR{return float4(1.0,100.0/(z+100.0),0.0,tex2D(s,t).x);}"
#define DX_WHITE "float4 main(float z:TEXCOORD1):COLOR{return float4(1.0,1.0,1.0,100.0/(z+100.0));}"
#define DX_WHITE1 DX_WHITE
#define DX_WHITE2 DX_WHITE
#define DX_PLAIN "sampler2D s;float4 main(float z:TEXCOORD1,float2 t:TEXCOORD0):COLOR{return float4(tex2D(s,t).xyz,100.0/(z+100.0));}"
#define DX_PLAIN1 DX_PLAIN
#define DX_PLAIN2 DX_PLAIN
#define DX_PLAINREF "sampler2D s;float4 main(float z:TEXCOORD1,float2 t:TEXCOORD0):COLOR{float4 c=tex2D(s,t);if(c.w<0.5)discard;return float4(c.xyz,100.0/(z+100.0));}"
#define DX_PLAINREF1 DX_PLAINREF
#define DX_PLAINREF2 DX_PLAINREF
#define DX_FELT1 DX_PLAIN1
#define DX_FELT2 DX_PLAIN2
