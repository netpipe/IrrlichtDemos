// simple fragment shader

// 'time' contains seconds since the program was linked.
//uniform float time;

uniform sampler2D RTexture;
uniform sampler2D RadialMap;
uniform sampler2D depthTex;
uniform float ratio;
uniform vec2 res;
float middle = texture2D(depthTex, res/2).x + texture2D(depthTex, res/2).y/ 256.0f;

float samples[] ={0.0755906,0.1309775,0.1756663,0.0755906,
0.1284325,0.0590321,0.1790372};


void main()
{
		vec4 sum = vec4(0);
		vec2 texcoord = vec2(gl_TexCoord[0]);
		int j;
		int i;

		for( i= -2 ;i < 2; i++)
		{
			for( j= -2 ;j < 2; j++)
			{
				sum += texture2D(RTexture, texcoord + vec2(j, i)*((texture2D(RadialMap, texcoord).x+abs(texture2D(depthTex, vec2(texcoord.x,res.y-texcoord.y)).x-middle))*(ratio+1)/50) * samples[j+2]);
			}
		}

		gl_FragColor = sum*0.1;
}
