
uniform float sampleDist1;
uniform sampler2D RT : register(s0);

float4 pixelMain(in float2 vTexCoord : TEXCOORD0) : COLOR
{
	// Table moved into function body.
	// Otherwise app is responsible for uploading constants.
	// 12 float2 packed into 6 float4. Uses 6 constant registers instead of 12
	float4 samples[6] = {
		-0.326212, -0.405805,
		-0.840144, -0.073580,
		-0.695914,  0.457137,
		-0.203345,  0.620716,
		0.962340, -0.194983,
		0.473434, -0.480026,
		0.519456,  0.767022,
		0.185461, -0.893124,
		0.507431,  0.064425,
		0.896420,  0.412458,
		-0.321940, -0.932615,
		-0.791559, -0.597705,
	};

	float4 sum = tex2D(RT, vTexCoord);

	for (int i=0; i<6; i++)
	{
		sum += tex2D(RT, vTexCoord + sampleDist1 * samples[i].xy); // swizzle to get first float2
		sum += tex2D(RT, vTexCoord + sampleDist1 * samples[i].zw); // swizzle to get second float2
	}

	sum /= 13.0;

	return float4(sum);
}